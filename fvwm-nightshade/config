########################################################################
#             _____________________________                        
#            / ___________________________/ 
#           / /_   ___      ______ ___
#          / __/| / / | /| / / __ `__ \   ___
#         / / | |/ /| |/ |/ / / / / / /  /__/
#        /_/  |___/ |__/|__/_/ /_/ /_/ 
#
#       _   ___        __    __       __              __    
#      / | / (_)____ _/ /_  / /______/ /_  ____ _____/ /___ 
#     /  |/ / // __ `/ __ \/ __/ ___/ __ \/ __ `/ __  // _ \
#    / /|  / // /_/ / / / / /_(__  ) / / / /_/ / /_/ //  __/
#   /_/ |_/_/ \__, /_/ /_/\__/____/_/ /_/\__,_/\__,_/ \___/ 
#            /____/                                         
#
#
# Fvwm Nightshade Configuration
InfoStoreAdd ns_version 0.5.5
# Copyright (C) 2012
#
# Authors:
#   Thomas Funk <t.funk@web.de>
#   Bernhard Popp <kermit.popp@googlemail.com>
#
# Thanks to (in no specific order):
#   Thomas Adam, Tavis Ormandy, Aelsi, Scientific, unambiguous, Kermit
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or 
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but 
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software Foundation
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
########################################################################
#
# Introductions:
# 
# You need the fvwm_icons distribution installed in the fvwm image path.
# If they are installed in another directory use the ImagePath command
# below.
#
# The suggested way to install this configuration file is to (re)move
# any .fvwm2rc file you have in ~/.fvwm or ~ and run fvwm without any
# startup file.
#
# For the sound effects to work you need the fvwm_sounds distribution
# (http://www.fvwm.org/download/icons.php - FVWM Icons and Sounds)
# installed and an .au player. To set the installation directory of this
# distribution as your sound player edit the *FvwmEvent commands.
# Note that if you use rplay, the rplayd daemon must be run.
#
# There are many comments, but a good reading of the fvwm FAQ, of the man
# pages of fvwm and its modules is suggested/recommended.
#
########################################################################
#
# Overview:
#
# 1. GLOBAL SETTINGS
#    1.1 Paths, Variables (SetEnv, InfoStore)
#        1.2.1 Paths and directories
#        1.2.2 Environment settings
#        1.2.3 Default applications
#        1.2.3 Others
#    1.3 Miscellaneous (BugOpts)
# 2. GLOBAL LOOK
#    2.1 Cursors
#    2.2 Fonts
#    2.3 Colorsets
#    2.4 Windows Decorations
#        2.4.1 General
#        2.4.2 Icons
#        2.4.3 Applications
#    2.5 Theme related decorations
# 3. GLOBAL FEEL
#    3.1 General
#    3.2 Windows
# 4. APPLCATIONS LOOK
#    4.1 Windows Decorations
#        4.1.1 General
#        4.1.2 Icons
#    4.2 Menus
#        4.2.1 WinOps menu
# 5. APPLICATIONS FEEL
#    5.1 General
#    5.2 Applications
# 6. BINDINGS
#    6.1 Mouse
#        6.1.1. Pointer in Root or anywhere
#        6.1.2. Pointer in Window Buttons
#        6.1.3. Pointer in Window Decorations
#        6.1.4. Pointer in Icons
#        6.1.5. Pointer in Window (and in Icon for consistency)
#    6.2 Keyboard
#        6.2.1 ALT + Key
#        6.2.2 ALT-SHIFT + Key
#        6.2.3 ALT-CTRL-SHIFT
#        6.2.4 CTRL + Key
#        6.2.5 CTRL-ALT + Key
#        6.2.6 SHIFT-CTRL + Key
#    6.3 Strokes
# 7. MODULES
#    7.1 FvwmAnimate
#    7.2 FvwmBacker
#    7.3 FvwmBanner
#    7.4 FvwmEvent
#        7.4.1 Common FvwmEvents
#	 7.4.2 Sound FvwmEvents
#    7.5 FvwmForm
#        7.5.1 RunCommand
#	 7.5.2 About box
#	 7.5.2 Message box
#	 7.5.2 Show Colorset
#    7.6 FvwmIdent
#    7.7 FvwmScript
#    7.8 Others
# 8. FUNCTIONS
#    8.1 Startup
#        8.1.1 Start
#        8.1.2 Session
#    8.2 General
#    8.3 Window/Icon
#    8.4 Menus
# 9. MENUS
#    9.1 Root menu
#    9.2 Help menu
#    9.3 Modules menu
#    9.4 Configuration menu
#    9.5 Fvwm Quit menu
#    9.6 Window Ops menus
#
########################################################################


########################################################################
#                 1. G L O B A L  S E T T I N G S 
########################################################################

#=======================================================================
# 1.1 Paths, Variables (SetEnv, InfoStore)
#=======================================================================

#-----------------------------------------------------------------------
# Set shell for Exec command
#-----------------------------------------------------------------------
ExecUseShell /bin/bash


#***********************************************************************
# 1.2.1 Paths and directories
#***********************************************************************
#-----------------------------------------------------------------------
# ModulePath is builtin, you may add some directories here
#
# IMPORTANT: if you decide to set a ModulePath, please note that modules
# are normally installed into a version-dependent directory.  Be sure to
# update this file after installing a new version.
#-----------------------------------------------------------------------
#ModulePath $[FVWM_USERDIR]/mymodules:+

#-----------------------------------------------------------------------
# Fvwm-Nightshade modules path
#-----------------------------------------------------------------------
#SetEnv NS_MODULEDIR $[FVWM_USERDIR]/modules

#-----------------------------------------------------------------------
# The default ImagePath for icons is: 
# /usr/include/X11/bitmap:/usr/include/X11/pixmaps
#
# If the fvwm_icons are not installed in one of these directories or if
# you want to add a personal image put them here
#-----------------------------------------------------------------------
ImagePath /usr/share/icons:/usr/share/icons/wm-icons:+
ImagePath +:/usr/share/pixmaps:/usr/share/pixmaps/fvwm
ImagePath +:$[FNS_SYSTEMDIR]/artwork/icons
ImagePath +:$[FVWM_USERDIR]/artwork/icons

#-----------------------------------------------------------------------
# actual wallpaper
#-----------------------------------------------------------------------
InfoStoreAdd fvwm_wallpaper $[FVWM_USERDIR]/.wallpaper


#***********************************************************************
# 1.2.2 Environment settings
#***********************************************************************
# These settings are rolled out to $[FVWM_USERDIR]/.settings
# They can configured with the FvwmForm-FNS-BaseSetup
#Read $[FVWM_USERDIR]/.settings
FuncPrintDbgMsg load-config .settings
Load .settings
FuncSetThemeDir $[infostore.used_theme]

#***********************************************************************
# 1.2.3 Others
#***********************************************************************

#-----------------------------------------------------------------------
# Adjust ratio to calculate resolution dependant things
#-----------------------------------------------------------------------
PipeRead "echo InfoStoreAdd ratio `perl -e 'printf \"%.1f\",log($[vp.width]*$[vp.height])/log(10)-log(1024*768)/log(10)+1'`"

#-----------------------------------------------------------------------
# used for 'Switching focus between windows. (ALT-Tab)' functionality
#-----------------------------------------------------------------------
InfoStoreAdd direction Next


#=======================================================================
# 1.3 Miscellaneous
#=======================================================================
# This commands controls several workarounds for bugs in third party
# programs

#-----------------------------------------------------------------------
# Disables ConfigureNotify events that are usually sent to an application
# while it is moved. If some windows flicker annoyingly while being moved,
# this option may help
#-----------------------------------------------------------------------
BugOpts FlickeringMoveWorkaround True

#-----------------------------------------------------------------------
# Enabling this option might help for Qt applications using DragnDrop.
# Surpresses the forwarding of unknown ClientEvent messages to windows
# -- usually this is harmless, but Qt has problems handling unrecognised
# ClientEvent messages.
#-----------------------------------------------------------------------
#BugOpts QtDragnDropWorkaround True


########################################################################
#                  2. G L O B A L  L O O K 
########################################################################
# Cursors, default fonts, Windows Decoration and Menu Styles
########################################################################

#=======================================================================
# 2.1 Cursors
#=======================================================================
CursorStyle ROOT		left_ptr		black	white
CursorStyle TITLE		top_left_arrow		black	white
CursorStyle DEFAULT		top_left_arrow		black	white
CursorStyle SYS			hand2			black	white
CursorStyle MENU		top_left_arrow		black	white
CursorStyle POSITION		top_left_corner		black	white
CursorStyle MOVE		fleur			black	white
CursorStyle RESIZE		sizing			black	white
CursorStyle WAIT		watch			black	white
CursorStyle SELECT		crosshair		black	white
CursorStyle DESTROY		pirate			black	white
CursorStyle TOP			top_side		black	white
CursorStyle RIGHT		right_side		black	white
CursorStyle BOTTOM		bottom_side		black	white
CursorStyle LEFT		left_side		black	white
CursorStyle TOP_LEFT		top_left_corner		black	white
CursorStyle TOP_RIGHT		top_right_corner	black	white
CursorStyle BOTTOM_LEFT		bottom_left_corner	black	white
CursorStyle BOTTOM_RIGHT	bottom_right_corner	black	white
CursorStyle TOP_EDGE		top_side		black	white
CursorStyle RIGHT_EDGE		right_side		black	white
CursorStyle BOTTOM_EDGE		bottom_side		black	white
CursorStyle LEFT_EDGE		left_side		black	white
CursorStyle STROKE		plus			black	white


#=======================================================================
# 2.2 Fonts
#=======================================================================

# For window titles, another for icons, and another for the menus
Style * Font "xft:$[infostore.used_font]:pixelsize=$[infostore.fontsize]"

Style * IconFont "xft:monospace:pixelsize=$[infostore.fontsize]:Medium"


#=======================================================================
# 2.3 Colorsets (based on Fvwm-Themes)
#=======================================================================
# You will find all colorsets in the theme specific file:
#-----------------------------------------------------------------------
#Read $[FNS_THEMEDIR]/colorsets
FuncPrintDbgMsg load-config $[FNS_THEMEDIR]/colorsets
Load $[FNS_THEMEDIR]/colorsets


#=======================================================================
# 2.4 Window Decorations
#=======================================================================

#=======================================================================
# 2.5 Theme related decorations
#=======================================================================
# In the decor file there a all decoration stuff needed for the specific
# theme like
# window bar: buttons, titlebar, ...
# Menus: for the Root and WinOps menu style
# mouse bindings for the buttons
#-----------------------------------------------------------------------
#Read $[FNS_THEMEDIR]/decor
FuncPrintDbgMsg load-config $[FNS_THEMEDIR]/decor
Load $[FNS_THEMEDIR]/decor


########################################################################
#                     3. G L O B A L  F E E L 
########################################################################

#=======================================================================
# 3.1 General
#=======================================================================

#-----------------------------------------------------------------------
# Xinerama support
#-----------------------------------------------------------------------
Xinerama on

#-----------------------------------------------------------------------
# Resize and move feedback windows in the center of the screen
#-----------------------------------------------------------------------
Emulate mwm

#-----------------------------------------------------------------------
# How hard it should be to change the desktop viewport by moving the
# mouse over the edge of the screen
#-----------------------------------------------------------------------
EdgeResistance 350

#-----------------------------------------------------------------------
# Scrolling complete page when hiting the edge of a page
# EdgeScroll 0 0 disables scrolling
#-----------------------------------------------------------------------
EdgeScroll 100 100

#-----------------------------------------------------------------------
# In order to enable page scrolling via the mouse, four windows called
# the "pan frames" are placed at the very edge of the screen. 1 gives
# the smallest pan frames, which seem to work best except on some servers.
#-----------------------------------------------------------------------
EdgeThickness 1

#-----------------------------------------------------------------------
# IconBox defines the area where FVWM will place any windows that are
# in the iconic state: 
#  IconBox left top right bottom
#
# IconGrid ist the distance between each icon. Default grid is 3x3 pixels:
#  IconGrid x y
#
# IconFill defines the direction icons will place. Default is from left
# to right. To fill an icon box in columns instead of rows, specify the
# vertical direction (top or bottom) first.
#-----------------------------------------------------------------------
Style * IconBox 20 80 -100 -20, \
        IconGrid 40 40, \
        IconFill left bottom, \
        StaysOnBottom

#-----------------------------------------------------------------------
# makes fvwm attempt to recognize and respect the mwm decoration hints
# that applications occasionally use
#-----------------------------------------------------------------------
Style * MWMDecor

#-----------------------------------------------------------------------
# makes fvwm shade out operations that mwm would prohibit, but it lets
# you perform the operation anyway
#-----------------------------------------------------------------------
Style * HintOverride

#-----------------------------------------------------------------------
# makes fvwm attempt to recognize and respect the olwm and olvwm hints
# that many older XView and OLIT applications use
#-----------------------------------------------------------------------
Style * OLDecor

#-----------------------------------------------------------------------
# This command controls the cursor during the execution of certain commands
#-----------------------------------------------------------------------
BusyCursor * True

#-----------------------------------------------------------------------
# Specifies the maximum delay in milliseconds between a button press and
# a button release for the Function command to consider the action a
# mouse click. Default is 150 ms
#-----------------------------------------------------------------------
ClickTime 300

#-----------------------------------------------------------------------
# Use EWMH hints and respect EWMH hints which change the window layer.
#-----------------------------------------------------------------------
Style * EWMHUseStackingOrderHints


#=======================================================================
# 3.2 Windows
#=======================================================================

#-----------------------------------------------------------------------
# Never hide the position or size of a window that is usually shown when
# it is moved or resized
#-----------------------------------------------------------------------
HideGeometryWindow Never

#-----------------------------------------------------------------------
# SnapAttraction lets nearby windows snap together, or snap to edges so
# that they are easier to align on your desktop, The default is off.
#-----------------------------------------------------------------------
Style * SnapAttraction 3 All

#-----------------------------------------------------------------------
# shows the content of a window while moving
#-----------------------------------------------------------------------
OpaqueMoveSize 100

#-----------------------------------------------------------------------
# shows the content of a window while resizing
#-----------------------------------------------------------------------
Style * ResizeOpaque

#-----------------------------------------------------------------------
# The WindowShadeSteps option selects the number of steps for animation
# when shading a window with WindowShade.
#-----------------------------------------------------------------------
#Style * WindowShadeSteps 20

#-----------------------------------------------------------------------
# The focus policy. Once you are used to clicking *inside* windows to
# raise them you will not want to lose this feature.
#-----------------------------------------------------------------------
Style * ClickToFocus
Style * MouseFocusClickRaises

#-----------------------------------------------------------------------
# You can use the IgnoreModifiers command to turn individual modifiers 
# off for bindings. Now CapsLock, NumLock and ScrollLock are removed from
# the keyboard map.
# For more infos please read http://fvwm.org/documentation/faq/#5.5
#-----------------------------------------------------------------------
IgnoreModifiers L25

#-----------------------------------------------------------------------
# TileCascadePlacement automatically places new windows in a smart
# location - a location in which they do not overlap any other windows
# on the screen.
#-----------------------------------------------------------------------
Style * TileCascadePlacement

#-----------------------------------------------------------------------
# !UsePPosition instructs fvwm to ignore the PPosition field in window
# geometry hints. Emacs annoyingly sets PPosition to (0,0)!
#-----------------------------------------------------------------------
Style * !UsePPosition

#Style * !FPGrabFocus

#-----------------------------------------------------------------------
# transient windows
#-----------------------------------------------------------------------
# You can do a lot of things with transient windows. However, you may
# want to set transient style by application (in styles).
Style * DecorateTransient

#-----------------------------------------------------------------------
# In *general* it is not a good idea to be able to lower transient window
# under its main window, but why not...
#-----------------------------------------------------------------------
#Style * DontRaiseTransient

#-----------------------------------------------------------------------
# Remove the relief around an iconified apps
#-----------------------------------------------------------------------
Style * IconBackgroundRelief 0

########################################################################
#                4. A P P L I C A T I O N S  L O O K
########################################################################
# If needed put in here all application specific styles. For information
# see style comments in GLOBAL LOOK

#=======================================================================
# 4.1 Windows Decorations
#=======================================================================

#***********************************************************************
# 4.1.1 General
#***********************************************************************
# If any application needs a specific window related style put it here

#-----------------------------------------------------------------------
# All Fvwm* named windows
#-----------------------------------------------------------------------
Style Fvwm* Colorset 0

#-----------------------------------------------------------------------
# xclock
#-----------------------------------------------------------------------
Style XClock  !Title
Style XClock  HandleWidth 2

#-----------------------------------------------------------------------
# stalonetray
#-----------------------------------------------------------------------
Style stalonetray !Title
Style stalonetray HandleWidth 2

#-----------------------------------------------------------------------
# FvwmBanner
#-----------------------------------------------------------------------
Style FvwmBanner !Title

#-----------------------------------------------------------------------
# FvwmForm-Messages 
#-----------------------------------------------------------------------
Style FvwmForm-Messages !Title

#-----------------------------------------------------------------------
# FvwmForm-RunCommand 
#-----------------------------------------------------------------------
Style FvwmForm-RunCommand !Title

#-----------------------------------------------------------------------
# FvwmForm-About 
#-----------------------------------------------------------------------
Style FvwmForm-About !Title


#***********************************************************************
# 4.1.2 Icons
#***********************************************************************
# If a window has no icon associated, then the below will use.
Style Untitled    EWMHMiniIconOverride, Icon unknown1.xpm, MiniIcon mini.x.xpm
Style NoClass     UseStyle Untitled
Style NoResource  UseStyle Untitled
Style X*          UseStyle Untitled
Style error       EWMHMiniIconOverride, Icon bomb.xpm, MiniIcon mini.bomb.xpm
Style FvwmIdent   EWMHMiniIconOverride, Icon question.xpm, MiniIcon mini.question.xpm



########################################################################
#                5. A P P L I C A T I O N S  F E E L
########################################################################

#=======================================================================
# 5.1 General
#=======================================================================

#-----------------------------------------------------------------------
# makes fvwm attempt to recognize and respect the mwm prohibited
# operations hints that applications occasionally use. But should only
# used for applications with problems because setting this globally will
# break Java programs by respecting MwmLayer.
#-----------------------------------------------------------------------
#Style <app> MWMFunctions


#=======================================================================
# 5.2 Applications
#=======================================================================

#-----------------------------------------------------------------------
# Stalonetray
#-----------------------------------------------------------------------
Style stalonetray EWMHUseStackingOrderHints
Style stalonetray Sticky
Style stalonetray WindowListSkip
Style stalonetray StaysOnBottom

#-----------------------------------------------------------------------
# xclock
#-----------------------------------------------------------------------
Style XClock Sticky
Style XClock WindowListSkip
Style XClock StaysOnBottom

#-----------------------------------------------------------------------
# FvwmBanner
#-----------------------------------------------------------------------
Style FvwmBanner Sticky
Style FvwmBanner StaysOnTop
Style FvwmBanner WindowListSkip
Style FvwmBanner CirculateSkip


########################################################################
#                       6. B I N D I N G S 
########################################################################

#=======================================================================
# 6.1 Mouse
#=======================================================================
# Handle some Mouse bindings now...
# Recall that mouse formats look like this:
#
# +------------+
# | ||  ||  || |
# |	       |
# +------------+
#   1   2   3

#-----------------------------------------------------------------------
# Contexts:                                  Desktop
#     R = Root Window                 rrrrrrrrrrrrrrrrrrrrrr
#     W = Application Window          rIrrrrFSSSSSSSSSFrrrrr
#     F = Frame Corners               rrrrrrS13TTTT642Srrrrr
#     S = Frame Sides                 rIrrrrSwwwwwwwwwSrrrrr
#     T = Title Bar                   rrrrrrSwwwwwwwwwSrrrrr
#     I = Icon                        rIrrrrFSSSSSSSSSFrrrrr
#                                     rrrrrrrrrrrrrrrrrrrrrr
# Numbers are buttons: 1 3 5 7 9   0 8 6 4 2
#
# Modifiers: (A)ny, (C)ontrol, (S)hift, (M)eta, (N)othing
#-----------------------------------------------------------------------
# Buttons:
# +----------------------------------------------------------+
# | X  X  X  X  X                              X  X  X  X  X |
# +----------------------------------------------------------+
# | 1  3  5  7  9                              0  8  6  4  2 |
# |                                                          |
#

#***********************************************************************
# 6.1.1. Pointer in Root or anywhere
#***********************************************************************
#     Button	Context Modifi 	Function
Mouse 1		R	A       Menu MenuRoot
Mouse 2       	R       A	WindowList
#Mouse 3       	RFT     A	Menu MenuWindowOpsFull
Mouse 3       	RFT     A	Menu MenuDesktopOps

#-----------------------------------------------------------------------
# Roll mouse wheel anywhere with SHIFT-ALT + cursor left/right for goto page
#-----------------------------------------------------------------------
Mouse 4       	A       SC      FuncGotoPage +1p +0p
Mouse 5       	A       SC      FuncGotoPage -1p +0p

#-----------------------------------------------------------------------
# Roll mouse wheel anywhere with SHIFT-CTRL + cursor left/right for goto page
# with active window
#-----------------------------------------------------------------------
Mouse 4       	A       SM      Current FuncMoveWindowToPage +1p +0p
Mouse 5       	A       SM      Current FuncMoveWindowToPage -1p +0p

#-----------------------------------------------------------------------
# Help info with SHIFT-CTRL-ALT in Root
#-----------------------------------------------------------------------
#     Button	Context Modifi 	Function
Mouse 0		R       SCM     FuncShowMessage  "Mouse Bindings for Root area" \
"Mouse 1:   Root menu" \
"Mouse 2:   Window list" \
"Mouse 3:   Desktop Oops menu" \
"Mouse 4/5: Switch to page left/right with" \
"           SHIFT-ALT + rolling wheel up/down anywhere" \
"           Switch with window to page left/right with" \
"           SHIFT-CTRL + rolling wheel up/down anywhere" \


#***********************************************************************
# 6.1.2. Pointer in Window Buttons
#***********************************************************************
# Bindings for window buttons in the theme related file
# $[FNS_THEMEDIR]/decor


#***********************************************************************
# 6.1.3. Pointer in Window Decorations
#***********************************************************************
#     Button	Context Modifi 	Function

#-----------------------------------------------------------------------
# Button 1 in the titlebar, with any modifiers, gives
# move <- drag, resize <- click or maximize <- double click
#-----------------------------------------------------------------------
Mouse 1		T	A	FuncMoveOrRaiseOrMaximize
#-----------------------------------------------------------------------
# Button 1 in the corners or sides, with any modifiers, gives
# resize <- drag, raise <- click or maximize <- double click
#-----------------------------------------------------------------------
Mouse 1		SF	A	FuncResizeOrRaiseOrMaximize
#-----------------------------------------------------------------------
# Button 2 in the titlebar, corners or sides, with any modifiers, gives
# move <- drag, raise/lower <- click
#-----------------------------------------------------------------------
Mouse 2		TSF	A	FuncMoveOrRaiseLower
#-----------------------------------------------------------------------
# Button 2 in the window, with ALT key, gives
# move <- drag, raise/lower <- click
#-----------------------------------------------------------------------
Mouse 2		W	M	FuncMoveOrRaiseLower
#-----------------------------------------------------------------------
# Button 3 in the titlebar, corners or sides, with any modifiers, gives
# WindowOps2 menu <- click, with ALT key WindowOps menu <- click
#-----------------------------------------------------------------------
Mouse 3		TSF	A	Menu MenuWindowOpsTrimmed
Mouse 3		TSF	M	Menu MenuWindowOpsFull
#-----------------------------------------------------------------------
# Roll mouse wheel on Titlebars to shade/unshade
#-----------------------------------------------------------------------
Mouse 4		T	A	FuncWheelToggleShade True
Mouse 5		T       A       FuncWheelToggleShade False


#-----------------------------------------------------------------------
# Help info with SHIFT-CTRL-ALT to Pointer in Window Decorations
#-----------------------------------------------------------------------
#     Button	Context Modifi 	Function
Mouse 0		T	SCM     FuncShowMessage  "Mouse Bindings for Titlebar" \
"Mouse 1:   Drag moves window" \
"           Maximize on double click" \
"Mouse 2:   Drag moves window" \
"           Raise or lower with click" \
"Mouse 3:   WindowOpsTrimmed menu with click" \
"           WindowOpsFull menu with ALT + click" \
"Mouse 4/5: Shade/unshade window" \
"           with rolling wheel up/down"

Mouse 0		SF	SCM	FuncShowMessage  "Mouse Bindings for Corners and Sides" \
"Mouse 1:   Drag resize window" \
"           Maximize on double click" \
"Mouse 2:   Drag moves window" \
"           Raise or lower with click" \
"Mouse 3:   WindowOpsTrimmed menu with click" \
"           WindowOpsFull menu with ALT + click"

Mouse 0		W	SCM	FuncShowMessage  "Mouse Bindings for Window area" \
"Mouse 1:   Root menu with ALT + click" \
"Mouse 2:   Drag + ALT moves window" \
"           Raise or lower with ALT + click" \
"Mouse 4/5: Switch to page left/right with" \
"           SHIFT-CTRL + rolling wheel up/down anywhere" \
"           Switch with window to page left/right with" \
"           SHIFT-ALT + rolling wheel up/down anywhere" \


#***********************************************************************
# 6.1.4. Pointer in Icons
#***********************************************************************
#     Button	Context Modifi 	Function

#-----------------------------------------------------------------------
# Button 1 in icon, with any modifiers, gives
# move <- drag, deiconify <- double click
#-----------------------------------------------------------------------
Mouse 1		I	A	FuncMoveOrIconify
#-----------------------------------------------------------------------
# Button 2 in icon, with any modifiers, gives
# deiconify <- click
#-----------------------------------------------------------------------
Mouse 2		I	A	FuncIconify
#-----------------------------------------------------------------------
# Button 2 in icon, with CTRL key, gives
# deiconify all icons from the same resource group <- click
#-----------------------------------------------------------------------
Mouse 2		I	C	FuncIconifySameResource toggle
#-----------------------------------------------------------------------
# Button 3 in icon, with any modifiers, gives
# WindowOps2 menu <- click
#-----------------------------------------------------------------------
Mouse 3		I	A	Menu MenuWindowOpsTrimmed
#-----------------------------------------------------------------------
# Button 3 in icon, with CTRL key, gives
# WindowGroupOps menu
#-----------------------------------------------------------------------
Mouse 3		I	C	Menu MenuWindowGroupOps


#-----------------------------------------------------------------------
# Help info with SHIFT-CTRL-ALT to Pointer in Icons
#-----------------------------------------------------------------------
#     Button	Context Modifi 	Function
Mouse 0		I       SCM     FuncShowMessage  "Mouse Bindings for Icons" \
"Mouse 1:   Drag moves icon" \
"           Deiconify with double click" \
"           Root menu with ALT + click" \
"Mouse 2:   Deiconify icon with click" \
"           All of same resource group with CTRL + click" \
"Mouse 3:   WindowOpsTrimmed menu with click" \
"           WindowGroupOps menu with CTRL + click"


#***********************************************************************
# 6.1.5. Pointer in Window (and in Icon for consistency)
#***********************************************************************
#     Button	Context Modifi 	Function
Mouse 1		WI	M	Menu MenuRoot


#=======================================================================
# 6.2 Keyboard
#=======================================================================
# same as with mouse:
#   Keyname 	Context Modifi 	Function
# Keyname is a standard X11 key name as defined in /usr/include/X11/keysymdef.h,
# (without the XK_ prefix), or the keysym database /usr/X11R6/lib/X11/XKeysymDB

#***********************************************************************
# 6.2.1 ALT + Key
#***********************************************************************
#   Keyname 	Context Modifi 	Function
#-----------------------------------------------------------------------
# Switching focus between windows. (ALT-Tab)
#-----------------------------------------------------------------------
Key Tab		A	M	FuncSwitchWindow
#-----------------------------------------------------------------------
# Print screenshot of whole desktop (page)
#-----------------------------------------------------------------------
Key Print	A       M       FuncDesktopCreateScreenshot 5


#***********************************************************************
# 6.2.2 ALT-SHIFT + Key
#***********************************************************************
#   Keyname 	Context Modifi 	Function
# keyboard accelerators
# SHIFT is needed to let apps (xwe, dosemu, kcalc) to handle ALT-FN keys
#-----------------------------------------------------------------------
# F1 open root menu
#-----------------------------------------------------------------------
Key F1		A	SM	Menu MenuRoot
#-----------------------------------------------------------------------
# F2 launch "run application" dialog box
#-----------------------------------------------------------------------
Key F2		A	SM	Module FvwmForm FvwmForm-RunCommand
#-----------------------------------------------------------------------
# F3 open window list
#-----------------------------------------------------------------------
Key F3		A	SM	WindowList
#-----------------------------------------------------------------------
# F4 close active window
#-----------------------------------------------------------------------
Key F4		A	SM	Pick Close
#-----------------------------------------------------------------------
# 
#-----------------------------------------------------------------------
#Key F5		A	SM	  
#-----------------------------------------------------------------------
# F6 cycle between windows belonging to the current application
#-----------------------------------------------------------------------
Key F6		A	SM	Next (CurrentPage, $[w.resource]) FuncSelectWindow
#-----------------------------------------------------------------------
# F7 move the active window
#-----------------------------------------------------------------------
Key F7		A	SM	Pick Move
#-----------------------------------------------------------------------
# F8 resize the active window
#-----------------------------------------------------------------------
Key F8		A	SM	Pick Resize
#-----------------------------------------------------------------------
# F9 minimize the active window
#-----------------------------------------------------------------------
Key F9		A	SM	Pick Iconify
#-----------------------------------------------------------------------
# F10 maximize/restore the active window
#-----------------------------------------------------------------------
Key F10		A	SM	Pick Maximize
#-----------------------------------------------------------------------
# F11 maximize active window to fullscreen and back
#-----------------------------------------------------------------------
Key F11		A	SM	Pick FuncMaximizeFullScreen
#-----------------------------------------------------------------------
# F12 identify active window
#-----------------------------------------------------------------------
Key F12		A	SM	Pick Module FvwmIdent

#-----------------------------------------------------------------------
# press SHIFT-ALT arrow anywhere, move active
# window to next/previous page
#-----------------------------------------------------------------------
Key Left	A	SM	FuncMoveWindowToPage -1p +0p
Key Right	A	SM	FuncMoveWindowToPage +1p +0p
#Key Up		A	SM	Nop
#Key Down	A	SM	Nop

#-----------------------------------------------------------------------
# key 1-4 move current window to page n
#-----------------------------------------------------------------------
Key 1		A	SM	Current FuncMoveWindowToPage 0 0
Key 2		A	SM	Current FuncMoveWindowToPage 1 0
Key 3		A	SM	Current FuncMoveWindowToPage 2 0
Key 4		A	SM	Current FuncMoveWindowToPage 3 0


#***********************************************************************
# 6.2.3 ALT-CTRL-SHIFT
#***********************************************************************
#   Keyname	Context Modifi 	Function
#-----------------------------------------------------------------------
# press ALT-CTRL-SHIFT arrow anywhere, and scroll by 10% of a page OK
#-----------------------------------------------------------------------
Key Left	A	SCM	Scroll -10  +0
Key Right	A	SCM	Scroll +10  +0
#Key Up		A	SCM	Scroll  +0 -10
#Key Down	A	SCM	Scroll  +0 +10

#-----------------------------------------------------------------------
# Help info with SHIFT-CTRL-ALT A to show all ALT related key bindings
#-----------------------------------------------------------------------
key A		A	SCM	FuncShowMessage  "ALT Key Bindings" \
"SHIFT-ALT:" \
"F1: Open root menu          F7:  Move window" \
"F2: Launch 'run' dialog box F8:  Resize window" \
"F3: Show window list        F9:  Minimize window" \
"F4: Close active window     F10: Maximize/restore window" \
"F5: Not used                F11: Fullscreen/restore window" \
"F6: Cycle between same      F12: Identify window" \
"    resource windows" \
"----------" \
"ALT:" \
"Tab:   Cycle between windows" \
"Print: Screenshot of the desktop"

#-----------------------------------------------------------------------
# Help info with SHIFT-CTRL-ALT H to show the global key bindings help window
#-----------------------------------------------------------------------
key H		A       SCM     FuncShowMessage  "Help Keys with CTRL-ALT" \
"A: List ALT bindings" \
"C: List CTRL bindings" \
"P: List Page bindings"


#***********************************************************************
# 6.2.4 CTRL + Key
#***********************************************************************
#   Keyname 	Context Modifi 	Function

#***********************************************************************
# 6.2.5 CTRL-ALT + Key
#***********************************************************************
#   Keyname Context Modifi 	Function
#-----------------------------------------------------------------------
# press ALT-CTRL arrow anywhere, and move the pointer by 1% of a page
#-----------------------------------------------------------------------
Key Left	A	CM	CursorMove -1 +0
Key Right	A	CM	CursorMove +1 +0
Key Up		A	CM	CursorMove +0 -1
Key Down	A	CM	CursorMove +0 +1

#***********************************************************************
# 6.2.6 SHIFT-CTRL + Key
#***********************************************************************
#   Keyname	Context Modifi 	Function
#-----------------------------------------------------------------------
# Go to page n
#-----------------------------------------------------------------------
Key 1		A	SC	FuncGotoPage 0 0
Key 2		A	SC	FuncGotoPage 1 0
Key 3		A	SC	FuncGotoPage 2 0
Key 4		A	SC	FuncGotoPage 3 0

#-----------------------------------------------------------------------
# press SHIFT-CTRL arrow anywhere, and scroll by one page
#-----------------------------------------------------------------------
Key Left	A	SC	FuncGotoPage -1p +0p
Key Right	A	SC	FuncGotoPage +1p +0p
#Key Up		A	SC	FuncGotoPage +0p -1p
#Key Down	A	SC	FuncGotoPage +0p +1p

#-----------------------------------------------------------------------
# open full windows oops menu
#-----------------------------------------------------------------------
Key F1		A	SC	Menu MenuWindowOpsFull
#-----------------------------------------------------------------------
# launch FvwmConsole
#-----------------------------------------------------------------------
Key F2		A	SC	FuncFvwmConsole

#-----------------------------------------------------------------------
# hide/unhide all windows
#-----------------------------------------------------------------------
Key D		A	SC	All (CurrentPage, AcceptsFocus) Iconify
#-----------------------------------------------------------------------
# lock Screen
#-----------------------------------------------------------------------
Key L		A	SC	Exec exec xscreensaver-command -lock
#-----------------------------------------------------------------------
# launch Terminal
#-----------------------------------------------------------------------
Key T		A	SC	Exec exec $[infostore.default_terminal]
#-----------------------------------------------------------------------
# Print screenshot for active window
#-----------------------------------------------------------------------
Key Print	A	SC	FuncWindowCreateScreenshot

#-----------------------------------------------------------------------
# Help info with SHIFT-CTRL-ALT C to show all CTRL related key bindings
#-----------------------------------------------------------------------
key C		A	SCM	FuncShowMessage  "CTRL Key Bindings" \
"SHIFT-CTRL:" \
"F1: Open full Oops menu     F2: Launch FvwmConsole" \
"---" \
"D:  Hide/unhide all windows T:  Launch Terminal" \
"L:  Lock Screen" \
"---" \
"Print: Screenshot of the window"

#-----------------------------------------------------------------------
# Help info with SHIFT-CTRL-ALT P to show all page related key bindings
#-----------------------------------------------------------------------
key P		A	SCM	FuncShowMessage  "Page Key Bindings" \
"SHIFT-CTRL:" \
"Cursor right/left: Switch to page right/left" \
"1-4: Switch to page n" \
"SHIFT-ALT:" \
"Cursor right/left: Switch active window to page right/left" \
"1-4: Switch active window to page n" \
"ALT-CTRL:" \
"Cursor right/left/up/down: Move mouse pointer by 1% of a page" \
"SHIFT-ALT-CTRL:" \
"Cursor right/left: Scroll right/left by 10% of a page"


#=======================================================================
# 6.3 Strokes
#=======================================================================
# You need fvwm compiled with stroke support and libstroke installed
# See the Stroke and StrokeFunc entries in the fvwm man page
# We use mostly simple stroke motion. For complex stroke motions we need
# to consider many sloppy stroke motions for each action.

#-----------------------------------------------------------------------
#STROKE 2
#-----------------------------------------------------------------------
#Mouse	3	R	N	StrokeFunc FeedBack DrawMotion
#Mouse	3 	W 	M 	StrokeFunc FeedBack DrawMotion

#-----------------------------------------------------------------------
#STROKE 2 We need to redefine the default bindings
#-----------------------------------------------------------------------
#Stroke	0	0 	RN 	WindowList mouse -1p -1p
#Stroke	0	0	WM	WindowList mouse -1p -1p

#-----------------------------------------------------------------------
#PREF 11
#STROKE 2 A | from the top to the bottom
#-----------------------------------------------------------------------
#Stroke	N852	0	RN	Exec exec xterm
#Stroke	N852	0	WM       Exec exec xterm

#-----------------------------------------------------------------------
#STROKE 2 A | from the bottom to the top
#-----------------------------------------------------------------------
#Stroke	N258	0	RN	Exec exec emacs
#Stroke	N258	0	WM	Exec exec emacs

#-----------------------------------------------------------------------
#STROKE 2 A / from the bottom to the top
#-----------------------------------------------------------------------
#Stroke	N159	0	RN	Exec exec xfm
#Stroke	N159	0	WM	Exec exec xfm

#-----------------------------------------------------------------------
#STROKE 2 A C from the top
#-----------------------------------------------------------------------
#Stroke	N9874123 0	RN	Exec exec xcalc
#Stroke	N9874123 0	WM	Exec exec xcalc

#-----------------------------------------------------------------------
#STROKE 11 A N (from the bottom)
#-----------------------------------------------------------------------
#Stroke	7415963	 0	RN	Exec exec mozilla
#Stroke	74148963 0	RN	Exec exec mozilla
#Stroke	74158963 0	RN	Exec exec mozilla
#Stroke	7418963	 0	RN	Exec exec mozilla
#Stroke	415963	 0	RN	Exec exec mozilla
#
#Stroke	7415963	 0	WM	Exec exec mozilla
#Stroke	74148963 0	WM	Exec exec mozilla
#Stroke	74158963 0	WM	Exec exec mozilla
#Stroke	7418963	 0	WM	Exec exec mozilla
#Stroke	415963	 0	WM	Exec exec mozilla

#-----------------------------------------------------------------------
#STROKE 4 A clockwise box from the top left
#-----------------------------------------------------------------------
#Stroke	N78963214  0	RN	FvwmForm FvwmForm-QuitVerify
#Stroke	N789632147 0	RN	FvwmForm FvwmForm-QuitVerify
#Stroke	N78963214  0	WM	FvwmForm FvwmForm-QuitVerify
#Stroke	N789632147 0	WM	FvwmForm FvwmForm-QuitVerify



########################################################################
#                         7. M O D U L E S 
########################################################################
# Definitions used by Fvwm modules.
# (Alphabetic order is used, but the Form are at the end)

#=======================================================================
# 7.1 FvwmAnimate
#=======================================================================
DestroyModuleConfig FvwmAnimate: *

*FvwmAnimate: Color #6e6e6e
*FvwmAnimate: Effect twist
*FvwmAnimate: Delay 3
*FvwmAnimate: Iterations 50
*FvwmAnimate: Width 5

#=======================================================================
# 7.2 FvwmBacker
#=======================================================================
DestroyModuleConfig FvwmBacker: *
*FvwmBacker: Command(Desk 0, Page * *) Colorset 24

#=======================================================================
# 7.3 FvwmBanner
#=======================================================================
DestroyModuleConfig FvwmBanner: *
*FvwmBanner: NoDecor
*FvwmBanner: Pixmap $[infostore.used_banner]
*FvwmBanner: Timeout 3

#=======================================================================
# 7.4 FvwmEvent
#=======================================================================

#***********************************************************************
# 7.4.1 Common FvwmEvents
#***********************************************************************
DestroyModuleConfig FvwmEventCommon: *
*FvwmEventCommon: enter_window      FE-EnterWindow
*FvwmEventCommon: deiconify 		DeThumbnail

#***********************************************************************
# 7.4.1 Sound FvwmEvents
#***********************************************************************
DestroyModuleConfig FvwmEventSound: *

# replace rplay by a sound player that can play .au sound file
#*FvwmEvent: Cmd "Exec exec rplay "

*FvwmEventSound: StartDelay 3
*FvwmEventSound: Delay 1

#*FvwmEventSound: startup          "/usr/share/sounds/gong.au"
#*FvwmEventSound: add_window       "/usr/share/sounds/wipe.au"
#*FvwmEventSound: destroy_window   "/usr/share/sounds/pook.au"
#*FvwmEventSound: iconify          "/usr/share/sounds/clong.au"
#*FvwmEventSound: deiconify        "/usr/share/sounds/clong.au"
#*FvwmEventSound: windowshade      "/usr/share/sounds/slide.au"
#*FvwmEventSound: dewindowshade    "/usr/share/sounds/slide.au"
#*FvwmEventSound: new_page         "/usr/share/sounds/slide.au"


#=======================================================================
# 7.5 FvwmForm
#=======================================================================

#***********************************************************************
# 7.5.1 RunCommand Window
#***********************************************************************
DestroyModuleConfig  FvwmForm-RunCommand: *
*FvwmForm-RunCommand: WarpPointer
*FvwmForm-RunCommand: Font 8x13
*FvwmForm-RunCommand: Title         "$[gt.Run Command]"
*FvwmForm-RunCommand: Line          center
*FvwmForm-RunCommand: Text          "$[gt.Run Command]"
*FvwmForm-RunCommand: Line          left
*FvwmForm-RunCommand: Text          "$[gt.Command:]"
*FvwmForm-RunCommand: Input         Command 30 ""
*FvwmForm-RunCommand: Line          center
*FvwmForm-RunCommand: Selection     cmd multiple
*FvwmForm-RunCommand: Choice        TERM    TERM     off      "$[gt.Run in Terminal]"
*FvwmForm-RunCommand: Line          expand
*FvwmForm-RunCommand: Button        quit "$[gt.Execute]"
*FvwmForm-RunCommand: Command       $(TERM?exec xterm -hold -T "$(Command)" -n "$(Command)" -e $(Command))
*FvwmForm-RunCommand: Command       exec $(Command)
*FvwmForm-RunCommand: Button        quit "$[gt.Cancel]"
*FvwmForm-RunCommand: Command       Nop

#***********************************************************************
# 7.5.2 About box
#***********************************************************************
DestroyModuleConfig FvwmForm-About: *
*FvwmForm-About: WarpPointer
*FvwmForm-About: Title "$[gt.About]"
*FvwmForm-About: Font 10x20
*FvwmForm-About: Line center
*FvwmForm-About: Text "FVWM-Nightshade"
*FvwmForm-About: Font 8x13bold
*FvwmForm-About: Line center
*FvwmForm-About: Text "$[gt.Version]: $[infostore.ns_version]"
*FvwmForm-About: Line center
*FvwmForm-About: Line center
*FvwmForm-About: Line center
*FvwmForm-About: Text "$[gt.Authors]:"
*FvwmForm-About: Font 8x13
*FvwmForm-About: Line center
*FvwmForm-About: Text "Thomas Funk <t.funk@web.de>"
*FvwmForm-About: Line center
*FvwmForm-About: Text "Bernhard Popp <kermit.popp@googlemail.com>"
*FvwmForm-About: Line center
*FvwmForm-About: Line center
*FvwmForm-About: Line center
*FvwmForm-About: Button quit " $[gt.Close] " ^[
*FvwmForm-About: Command Nop
*FvwmForm-About: Line center

#***********************************************************************
# 7.5.2 Message box
#***********************************************************************
#-----------------------------------------------------------------------
# Shows a FvwmForm Infobox with one or multiple message line(s)
# realized with shell commands over PipeRead
#-----------------------------------------------------------------------
# Example:
# FuncShowMessage "<title>" "<message_1>" ... "<message_n>"
DestroyFunc FuncShowMessage
AddToFunc   FuncShowMessage
+ I PipeRead `echo 'DestroyModuleConfig  FvwmForm-Messages: *' > ${FVWM_USERDIR}/FvwmForm-Messages; \
              echo '*FvwmForm-Messages: Font 8x13' >> ${FVWM_USERDIR}/FvwmForm-Messages; \
              echo '*FvwmForm-Messages: WarpPointer' >> ${FVWM_USERDIR}/FvwmForm-Messages; \
              echo "*FvwmForm-Messages: Title   \\"$0\\"" >> ${FVWM_USERDIR}/FvwmForm-Messages `
+ I PipeRead `start=0; for i in $*; do \
              if [ "$start" -gt "0" ]; then \
                echo '*FvwmForm-Messages: Line    left' >> ${FVWM_USERDIR}/FvwmForm-Messages; \
                echo "*FvwmForm-Messages: Text  \\"$i\\"" >> ${FVWM_USERDIR}/FvwmForm-Messages; \
              fi; \
              start=$(($start+1)); \
              done `
+ I PipeRead `echo '*FvwmForm-Messages: Line   center' >> ${FVWM_USERDIR}/FvwmForm-Messages; \
              echo '*FvwmForm-Messages: Button  quit \" Ok \"' >> ${FVWM_USERDIR}/FvwmForm-Messages; \
              echo '*FvwmForm-Messages: Command !(rm -f ${FVWM_USERDIR}/FvwmForm-Messages)' >> ${FVWM_USERDIR}/FvwmForm-Messages `
+ I Schedule 100 Module FvwmForm FvwmForm-Messages



#=======================================================================
# 7.7 FvwmIdent
#=======================================================================
#  A xwininfo replacement
DestroyModuleConfig FvwmIdent: *
*FvwmIdent: Colorset  21
*FvwmIdent: Font      "xft:$[infostore.used_font]:pixelsize=$[infostore.fontsize]"


#=======================================================================
# 7.7 FvwmScript
#=======================================================================
# Add the third path to search for FvwmScript scripts
DestroyModuleConfig FvwmScript: *
*FvwmScript: Path $[FVWM_USERDIR]/scripts


#=======================================================================
# 7.8 Others
#=======================================================================
# Other modules will be located in NS_MODULEDIR: $[FVWM_USERDIR]/modules


########################################################################
#                         8. F U N C T I O N S 
########################################################################
# "I" stands for Immediate
# "M" stands for Motion
# "C" stands for Click
# "H" stands for Hold
# "D" stands for Double Click

#=======================================================================
# 8.1 Startup
#=======================================================================

#***********************************************************************
# 8.1.1 Start
#***********************************************************************
# The StartFunction is used at start and restart with or without a Session
# Manager.
DestroyFunc StartFunction
AddToFunc StartFunction
# check for apps needed for full config functionality
+ I Test (Init) FuncAppCheck
#-----------------------------------------------------------------------
# show splash sceen
+ I Test (Init) Module FvwmBanner
#-----------------------------------------------------------------------
# set the root background image with Esetroot or if no image found start
# default Fvwm background
+ I Test (I $[infostore.fvwm_wallpaper]) Exec exec Esetroot -scale $[infostore.fvwm_wallpaper]
+ I TestRC (!Match) Module FvwmBacker
#-----------------------------------------------------------------------
# activate automatical raise of windows
+ I Module FvwmAuto 300
#-----------------------------------------------------------------------
# activate animation module used with iconiy for example
+ I Module FvwmAnimate
#-----------------------------------------------------------------------
# activate module for event actions
+ I Module FvwmEvent FvwmEventCommon
#-----------------------------------------------------------------------
# activate module for sound event actions
#+ I Module FvwmEvent FvwmEventSound
#-----------------------------------------------------------------------
# start xscreensaver daemon for locking
+ I Test (x xscreensaver-command) Test (Init) Exec xscreensaver -no-splash
#-----------------------------------------------------------------------
# start FvwmForm-FNS-BaseSetup if not configured
+ I Test (!f $[FVWM_USERDIR]/.FvwmForm-FNS-BaseSetup) FvwmForm FvwmForm-FNS-BaseSetup

#-----------------------------------------------------------------------
# Set layout
#-----------------------------------------------------------------------
FuncPrintDbgMsg load-config $[FVWM_USERDIR]/.layout
+ I Read $[FVWM_USERDIR]/.layout

AddToFunc StartFunction
#-----------------------------------------------------------------------
# start programs found in .autostart
+ I FuncAutoStartPrograms


#=======================================================================
# 8.2 General
#=======================================================================

#-----------------------------------------------------------------------
# Change the original behaviour of UrgencyFunc. Now, if a window is 
# closed, the focus won't switch to the next window in the windowlist
#-----------------------------------------------------------------------
DestroyFunc UrgencyFunc
AddToFunc UrgencyFunc
+ I Iconify off
+ I Raise

#-----------------------------------------------------------------------
# Stop Fvwm modules
#-----------------------------------------------------------------------
DestroyFunc FuncStopModule
AddToFunc   FuncStopModule
+ I KillModule $0

#-----------------------------------------------------------------------
# Stop Fvwm modules by alias
#-----------------------------------------------------------------------
DestroyFunc FuncStopModuleByAlias
AddToFunc   FuncStopModuleByAlias
+ I KillModule $0 $1

#-----------------------------------------------------------------------
# Restart modules
#-----------------------------------------------------------------------
DestroyFunc FuncRestartModule
AddToFunc   FuncRestartModule
+ I FuncStopModule $0
+ I Module $0

#-----------------------------------------------------------------------
# Restart modules ny alias
#-----------------------------------------------------------------------
DestroyFunc FuncRestartModuleByAlias
AddToFunc   FuncRestartModuleByAlias
+ I FuncStopModuleByAlias $0 $1
+ I Module $0 $1 $2

#-----------------------------------------------------------------------
# Resets a definition of all colorsets
#-----------------------------------------------------------------------
DestroyFunc FuncResetColorset
AddToFunc   FuncResetColorset
+ I CleanupColorsets

#-----------------------------------------------------------------------
# Remove all buttons for a theme and its bindings
#-----------------------------------------------------------------------
DestroyFunc FuncRemoveAllButtons
AddToFunc   FuncRemoveAllButtons
+ I Style * !Button 1, !Button 3, !Button 5, !Button 7, !Button 9
+ I Style * !Button 2, !Button 4, !Button 6, !Button 8, !Button 0
+ I FuncRemoveAllButtonBindings
+ I ButtonStyle Reset
+ I TitleStyle Height 5

#-----------------------------------------------------------------------
# Change a decor on the fly
#-----------------------------------------------------------------------
DestroyFunc FuncChangeDecor
AddToFunc FuncChangeDecor
+ I PipeRead 'echo InfoStoreAdd used_theme $0'
+ I FuncSetThemeDir $[infostore.used_theme]
+ I FuncRemoveAllButtons
+ I Read $[FNS_THEMEDIR]/colorsets
+ I Read $[FNS_THEMEDIR]/decor
+ I FuncWriteInfoStoreToFileAndSet used_theme $0 $[FVWM_USERDIR]/.settings
+ I ReloadLayoutParts $[infostore.used_layout]


#-----------------------------------------------------------------------
# Update/Create an InfoStore variable in a file
# FuncWriteInfoStoreToFile <var_name> <var_value> <file>
#-----------------------------------------------------------------------
DestroyFunc FuncWriteInfoStoreToFileAndSet
AddToFunc   FuncWriteInfoStoreToFileAndSet
+ I PipeRead 'if [ `grep -c $0 $2` -gt 0 ] ; then \
		sed -i --follow-symlinks "s/^InfoStoreAdd $0.*/InfoStoreAdd $0 $1/" $2; \
	      else \
		sed -i --follow-symlinks "$ a\InfoStoreAdd $0 $1" $2; \
	      fi;'
+ I InfoStoreAdd $0 $1

#-----------------------------------------------------------------------
# Prints a message in .xsession-errors
#-----------------------------------------------------------------------
#DestroyFunc FuncPrintDbgMsg
#AddToFunc   FuncPrintDbgMsg
#+ I PipeRead `echo "[Fvwm-Nightshade]$0: $1" >> ${HOME}/.xsession-errors`

#-----------------------------------------------------------------------
# Check which appliction are installed to get full functionality
# print a message in .xsession-errors if check for app failed
#-----------------------------------------------------------------------
DestroyFunc FuncAppCheck
AddToFunc   FuncAppCheck
# xterm
+ I Test (!x xterm) FuncPrintDbgMsg "AppCheck" "xterm (view, edit) not installed"
# xclock
+ I Test (!x conky) FuncPrintDbgMsg "AppCheck" "conky (clock, cpu) not installed"
# default terminal
+ I Test (!x $[infostore.default_terminal]) FuncPrintDbgMsg "AppCheck" "default terminal $[infostore.default_terminal] not installed"
# default browser
+ I Test (!x $[infostore.default_browser]) FuncPrintDbgMsg "AppCheck" "default browser $[infostore.default_browser] not installed"
# xscreensaver
+ I Test (!x xscreensaver-command) FuncPrintDbgMsg "AppCheck" "xscreensaver (lock) not installed"
# Esetroot in package eterm
+ I Test (!x Esetroot) FuncPrintDbgMsg "AppCheck" "eterm (esetroot for background) not installed"
# import in package imagemagick
+ I Test (!x import) FuncPrintDbgMsg "AppCheck" "imagemagick (import for screenshot, thumbs) not installed"
# stalonetray
+ I Test (!x stalonetray) FuncPrintDbgMsg "AppCheck" "stalonetray (systray) not installed"
# systray app volumeicon
+ I Test (!x volumeicon) FuncPrintDbgMsg "AppCheck" "volumeicon (systray volume control) not installed"
# systray app fdpowermon
+ I Test (!x fdpowermon) FuncPrintDbgMsg "AppCheck" "fdpowermon (systray pm control) not installed"
# systray app nm-applet
+ I Test (!x nm-applet) FuncPrintDbgMsg "AppCheck" "nm-applet (systray network control) not installed"
# systray app bluetooth-applet
+ I Test (!x bluetooth-applet) FuncPrintDbgMsg "AppCheck" "bluetooth-applet (systray bluetooth-applet) not installed"
# Suspend, hibernate pm-is-supported
+ I Test (!x pm-is-supported) FuncPrintDbgMsg "AppCheck" "pm-utils (suspend, hibernate) not installed"

#-----------------------------------------------------------------------
# Starts a system tray "module"
#-----------------------------------------------------------------------
#DestroyFunc FuncStartSysTray
#AddToFunc   FuncStartSysTray
#+ I Test (x stalonetray) PipeRead `echo Exec exec stalonetray \
#                                  -d all \
#                                  -geometry 1x1+$(($[vp.width]/4*3))+1 \
#                                  --grow-gravity SE \
#                                  --kludges fix_window_pos,force_icons_size,use_icons_hints \
#                                  --background="#7a7664"`
#+ I TestRc (Match) Wait stalonetray

#-----------------------------------------------------------------------
# Starts system tray applets like network, sound, etc
#-----------------------------------------------------------------------
DestroyFunc FuncStartSystrayApplets
AddToFunc   FuncStartSystrayApplets
+ I PipeRead 'echo SetEnv systray_started `ps -e |grep -c stalonetray`'
+ I Test (EnvMatch systray_started 0 ) break
# volume
+ I Test (x volumeicon) exec exec volumeicon
# battery
+ I Test (x fdpowermon) exec exec fdpowermon
# network
+ I Test (x nm-applet) exec exec nm-applet
# bluetooth
+ I Test (x bluetooth-applet) exec exec bluetooth-applet

#-----------------------------------------------------------------------
# Starts programs while startup
#-----------------------------------------------------------------------
DestroyFunc FuncAutoStartPrograms
AddToFunc FuncAutoStartPrograms
+ I Test (f $[FVWM_USERDIR]/.autostart) \
    Exec exec fns-start-programs Autostart $[FVWM_USERDIR]/.autostart

#-----------------------------------------------------------------------
# Starts a FvwmConsole
#-----------------------------------------------------------------------
DestroyFunc FuncFvwmConsole
AddToFunc   FuncFvwmConsole
+ I Module FvwmConsole -fg $[fg.cs22] -bg $[bg.cs22] $*

#-----------------------------------------------------------------------
# Starts a xterm to run something in it
#-----------------------------------------------------------------------
DestroyFunc FuncRunInXterm
AddToFunc   FuncRunInXterm
+ I exec xterm $3 -fg black -bg snow2 -g 80x40 -fn 7x14 -fb 7x14bold \
                +sb -ut -T "$0" -n "$0" -e $1

#-----------------------------------------------------------------------
# starts a xterm to view a file
#-----------------------------------------------------------------------
DestroyFunc FuncViewFile
AddToFunc   FuncViewFile
+ I Exec exec xterm -fg $[fg.cs33] -bg $[bg.cs33] -g 80x24 -fn 7x14 -fb 7x14bold \
                    -n "File Viewer - $0" -T "File Viewer - $0" -e less -e "$0"

#-----------------------------------------------------------------------
# Edit a file
#-----------------------------------------------------------------------
DestroyFunc FuncFvwmEditFile
AddToFunc   FuncFvwmEditFile
+ I Test (EnvIsSet EDITOR) FuncRunInXterm 'Edit File - $0' '$ENV[EDITOR] "$0"'
+ I TestRc (!Match) FuncRunInXterm 'Edit File - $0' 'vi "$0"'

#-----------------------------------------------------------------------
# starts a xterm to tail some a log or so
#-----------------------------------------------------------------------
DestroyFunc FuncViewFileTail
AddToFunc   FuncViewFileTail
+ I Exec exec xterm -fg $[fg.cs33] -bg $[bg.cs33] -g 80x40 -fn 7x14 -fb 7x14bold \
                    -n "Tail File - $0" -T "Tail File - $0" -e less +F -f "$1"

#-----------------------------------------------------------------------
# Creates a screenshot from the actual window
#-----------------------------------------------------------------------
DestroyFunc FuncWindowCreateScreenshot
AddToFunc   FuncWindowCreateScreenshot
+ I PipeRead 'echo InfoStoreAdd picpath "$[FVWM_USERDIR]/screenshot-`date +%F-%H%M%S`.$[w.id].png"'
+ I Test (x import) ThisWindow (!Shaded, !Iconic, Iconifiable) \
                  PipeRead 'import -frame -window $[w.id] $[infostore.picpath]'
+ I TestRc (Match)  FuncShowMessage "$[gt.Screenshot Info for window] $[w.id]" \
                                    "Screenshot created: $[infostore.picpath]"
+ I TestRc (!Match) FuncShowMessage "$[gt.Screenshot Info for window] $[w.id]" \
                                    "ImageMagick isn't installed. No screenshot created."
+ I InfoStoreRemove picpath

#-----------------------------------------------------------------------
# Creates a screenshot from the desktop
#-----------------------------------------------------------------------
DestroyFunc FuncDesktopCreateScreenshot
AddToFunc   FuncDesktopCreateScreenshot
+ I PipeRead 'echo InfoStoreAdd picpath "$[FVWM_USERDIR]/screenshot-`date +%F-%H%M%S`.png"'
#+ I Test (x import) PipeRead 'import -window root $[picpath]'
+ I Test (x import) PipeRead 'sleep $0; import -window root -quality 100 -silent $[infostore.picpath]'
+ I TestRc (Match)  FuncShowMessage "$[gt.Screenshot Info for the desktop]" \
                                    "Screenshot created: $[infostore.picpath]"
+ I TestRc (!Match) FuncShowMessage "$[gt.Screenshot Info for the desktop]" \
                                    "ImageMagick isn't installed. No screenshot created."
+ I InfoStoreRemove picpath

#-----------------------------------------------------------------------
# Open an URL in a browser
#-----------------------------------------------------------------------
DestroyFunc FuncOpenURL
AddToFunc   FuncOpenURL
+ I Test (x $[infostore.default_browser]) Exec $[infostore.default_browser] '$0'
+ I TestRc (!Match) Test (x firefox) Exec firefox '$0'
+ I TestRc (!Match) Test (x chromium) Exec chromium '$0'
+ I TestRc (!Match) Test (x seamonkey) Exec seamonkey '$0'
+ I TestRc (!Match) Test (x iceweasel) Exec iceweasel '$0'
+ I TestRc (!Match) Test (x iceape) Exec iceape '$0'
+ I TestRc (!Match) Test (x netscape) Exec netscape -remote 'openURL($0, new-window)' 2>/dev/null || netscape '$0'
+ I TestRc (!Match) Test (x galeon) Exec galeon '$0'
+ I TestRc (!Match) Test (x konqueror) Exec konqueror '$0'
+ I TestRc (!Match) Test (x opera) Exec opera '$0'
+ I TestRc (!Match) FuncRunInXterm 'Open URL - $0' 'links "$0"'

#-----------------------------------------------------------------------
# Switching focus between windows. (ALT-Tab) from the Fvwm Wiki
#-----------------------------------------------------------------------
DestroyFunc FuncSwitchWindow
AddToFunc   FuncSwitchWindow
+ I $[infostore.direction] (CurrentPage, !Iconic, !Sticky) FuncSelectWindow
+ I Deschedule 134000
+ I PipeRead `[ "$[infostore.DIR]" == "Prev" ] && \
              echo 'InfoStoreAdd new_direction Next' || \
              echo 'InfoStoreAdd new_direction Prev'`
+ I Schedule 700 134000 InfoStoreAdd direction $[infostore.new_direction]

#-----------------------------------------------------------------------
# Wallpaper Browser by Taviso.
#-----------------------------------------------------------------------
DestroyFunc WallpaperBrowser
AddToFunc   WallpaperBrowser
+ I PipeRead 'test ! -d "${FVWM_USERDIR}/wallpapers" && mkdir "${FVWM_USERDIR}/wallpapers"; \
    test ! -d "${FVWM_USERDIR}/wallpapers/.thumbs" && mkdir "${FVWM_USERDIR}/wallpapers/.thumbs"; \
    for i in "$0/"*; do \
        test -f "${FVWM_USERDIR}/wallpapers/.thumbs/${i##*/}" -a "${i}" -ot "${FVWM_USERDIR}/wallpapers/.thumbs/${i##*/}" || { \
                convert -quality 0 -sample 42 "${i}" "png:${FVWM_USERDIR}/wallpapers/.thumbs/${i##*/}" 2>/dev/null \
                    || continue; \
            }; \
    done; \
    fvwm-menu-directory --icon-title menu/folder-open.xpm --icon-file __PIXMAP__ --links \
    --icon-dir menu/folder.xpm \
    --dir "$0" --command-file="FuncNewWallpaper \\"%f\\"" \
    --exec-t="^xv -wait 2 *" --func-name WallpaperBrowser | sed \
    "s#__PIXMAP__\\(.*\\)\\\"\\(.*/\\)\\(.*\\)\\\"#\\$[FVWM_USERDIR]/wallpapers/.thumbs/\\3\\1\\2\\3#g"'

#-----------------------------------------------------------------------
# switch background from FvwmBacker to chosen wallpaper picture
#-----------------------------------------------------------------------
DestroyFunc FuncNewWallpaper
AddToFunc   FuncNewWallpaper
+ I PipeRead 'ln -sf $* $[FVWM_USERDIR]/.wallpaper'
+ I Exec exec Esetroot -scale $[infostore.fvwm_wallpaper]
+ I KillModule FvwmBacker

#-----------------------------------------------------------------------
# delete wallpaper link and activate FvwmBacker
#-----------------------------------------------------------------------
DestroyFunc FuncDelWallpaperlink
AddToFunc   FuncDelWallpaperlink
+ I PipeRead 'rm -f $[infostore.fvwm_wallpaper]'
+ I Module FvwmBacker


#-----------------------------------------------------------------------
# replacement for iconify. Creates a small thumb with little app icon
# on the upper right and the name of the app at the bottom
#-----------------------------------------------------------------------
DestroyFunc Thumbnail
AddToFunc Thumbnail
+ I Raise
+ I ThisWindow (!Iconic) PipeRead "echo SetEnv app_name `xprop -id $[w.id] WM_CLASS |cut -d',' -f2 |cut -d'\"' -f2`"
+ I PipeRead "echo SetEnv Icon-$[w.id] `grep -i -m1 \"$[app_name]\" ${FVWM_USERDIR}/.menu |cut -d'%' -f2`"
+ I PipeRead 'test ! -d "${FVWM_USERDIR}/temp" && mkdir "${FVWM_USERDIR}/temp"'
+ I ThisWindow (!Shaded, Iconifiable, !Iconic) PipeRead \
    "xwd -silent -id $[w.id] | convert -scale 128x72! -frame 1x1 \
    -mattecolor black -quality 0 xwd:- png:$[FVWM_USERDIR]/temp/icon.tmp.$[w.id].png \
    && echo WindowStyle IconOverride, Icon $[FVWM_USERDIR]/temp/icon.tmp.$[w.id].png \
    || echo Nop"
+ I TestRc (Match) Test (f $[Icon-$[w.id]], f $[FVWM_USERDIR]/temp/icon.tmp.$[w.id].png) PipeRead \
    "convert $[FVWM_USERDIR]/temp/icon.tmp.$[w.id].png \\\( $[Icon-$[w.id]] -scale 24x24 \\\) \
    -gravity northeast -geometry +10+10 -compose multiply -composite \
    -fill white -undercolor '#00000080' -gravity south -annotate +0+5 \" $[app_name] \" \
    $[FVWM_USERDIR]/temp/icon.tmp.$[w.id].png; echo Nop"
+ I Iconify

#-----------------------------------------------------------------------
# replacement for deiconify.
#-----------------------------------------------------------------------
DestroyFunc DeThumbnail
AddToFunc DeThumbnail
+ I Test (i $[Icon-$[w.id]]) WindowStyle Icon $[Icon-$[w.id]]
+ I TestRc (NoMatch) WindowStyle NoIconOverride, Icon
+ I Exec rm -f $[FVWM_USERDIR]/temp/icon.tmp.$[w.id].png
+ I All (Iconic, CurrentPage) PlaceAgain icon
+ I UnsetEnv Icon-$[w.id]

#-----------------------------------------------------------------------
# Suspend the machine
#-----------------------------------------------------------------------
DestroyFunc FuncSuspend
AddToFunc   FuncSuspend
+ I Test (x pm-is-supported) PipeRead 'dbus-send --system --print-reply --dest=org.freedesktop.Hal \
					/org/freedesktop/Hal/devices/computer \
					org.freedesktop.Hal.Device.SystemPowerManagement.Suspend \
					int32:0'
+ I TestRc (!Match) FuncShowMessage "Suspend Info" "Install pm-utils for full functionality"         

#-----------------------------------------------------------------------
# Hibernate the machine
#-----------------------------------------------------------------------
DestroyFunc FuncHibernate
AddToFunc   FuncHibernate
+ I Test (x pm-is-supported) PipeRead 'dbus-send --system --print-reply --dest=org.freedesktop.Hal \
					/org/freedesktop/Hal/devices/computer \
					org.freedesktop.Hal.Device.SystemPowerManagement.Hibernate'
+ I TestRc (!Match) FuncShowMessage "Suspend Info" "Install pm-utils for full functionality"          

#-----------------------------------------------------------------------
# Activate lockscreen if installed
#-----------------------------------------------------------------------
DestroyFunc FuncLockScreen
AddToFunc   FuncLockScreen
+ I PipeRead 'if [ `pidof xscreensaver` ]; then \
                echo SetEnv isRunning 1; \
              else \
                echo SetEnv isRunning 0; \
              fi'
+ I Test (EnvMatch isRunning 1) Exec exec xscreensaver-command -lock
+ I TestRc (!Match) FuncShowMessage "Lock screen Info" "'xscreensaver' not running or not installed."

#-----------------------------------------------------------------------
# Show screen saver menu
#-----------------------------------------------------------------------
DestroyFunc FuncMenuXScreenSaver
AddToFunc   FuncMenuXScreenSaver
+ I Test (x xscreensaver-command) Popup MenuXScreenSaver
+ I TestRc (!Match) FuncShowMessage "Screensaver Info" "Install xscreensaver for full functionality"     



#=======================================================================
# 8.3 Window/Icon
#=======================================================================

#-----------------------------------------------------------------------
# This one moves and then raises the window if you drag the mouse,
# only raises the window if you click, or maximize if you double click
#-----------------------------------------------------------------------
DestroyFunc FuncMoveOrRaiseOrMaximize
AddToFunc   FuncMoveOrRaiseOrMaximize
+ H Move
+ M Move
+ C Raise
+ D Maximize

#-----------------------------------------------------------------------
# This one resizes and then raises the window if you drag the mouse, only
# raises the window if you click,  or maximize if you double click
#-----------------------------------------------------------------------
DestroyFunc FuncResizeOrRaiseOrMaximize
AddToFunc   FuncResizeOrRaiseOrMaximize
+ H Resize $0
+ M Resize $0
+ C Raise
+ D Maximize

#-----------------------------------------------------------------------
# This one moves the window if you drag the mouse and RaiseLower if you click
#-----------------------------------------------------------------------
DestroyFunc FuncMoveOrRaiseLower
AddToFunc   FuncMoveOrRaiseLower
+ H Move
+ M Move
+ C RaiseLower

#-----------------------------------------------------------------------
# This moves the icon if you drag the mouse and deiconify it if you double click
#-----------------------------------------------------------------------
DestroyFunc FuncMoveOrIconify
AddToFunc   FuncMoveOrIconify
+ M Move
+ D Iconify

#-----------------------------------------------------------------------
# This function maximize a window to fullscreen - no title, no buttons, no border 
#-----------------------------------------------------------------------
DestroyFunc FuncMaximizeFullScreen
AddToFunc   FuncMaximizeFullScreen
+ I ThisWindow (Maximized) WindowStyle Title, Borders
+ I TestRc (!Match) WindowStyle !Title, !Borders
+ I TestRc (!Match) Raise
+ I TestRc (!Match) UpdateStyles
+ I Maximize ewmhiwa

#-----------------------------------------------------------------------
# This function selects a window, give it the focus and raise it
#-----------------------------------------------------------------------
DestroyFunc FuncSelectWindow
AddToFunc   FuncSelectWindow
+ I Iconify off
+ I Focus
+ I Raise

#-----------------------------------------------------------------------
# Restore the previous state of a window
#-----------------------------------------------------------------------
DestroyFunc FuncRestore
AddToFunc   FuncRestore
+ I ThisWindow (!Iconic !Shaded Maximized) Maximize    false
+ I ThisWindow (!Iconic  Shaded          ) WindowShade false
+ I ThisWindow ( Iconic                  ) Iconify     false


#-----------------------------------------------------------------------
# delete a window (single click) or destroy it (double click)
#-----------------------------------------------------------------------
DestroyFunc FuncDeleteOrDestroy
AddToFunc   FuncDeleteOrDestroy
+ H Nop
+ M Nop
+ C Delete
+ D Destroy

#-----------------------------------------------------------------------
#-----------------------------------------------------------------------
DestroyFunc FuncMaximize
AddToFunc   FuncMaximize
+ M Nop
+ H Nop
+ C Maximize
+ D Menu MenuWindowMaximize

#-----------------------------------------------------------------------
#-----------------------------------------------------------------------
DestroyFunc FuncMaximizeVertically
AddToFunc   FuncMaximizeVertically
+ H Maximize 0 100
+ M Maximize 0 100
+ C Maximize 0 100

#-----------------------------------------------------------------------
#-----------------------------------------------------------------------
DestroyFunc FuncMaximizeHorizontally
AddToFunc   FuncMaximizeHorizontally
+ H Maximize 100 0
+ M Maximize 100 0
+ C Maximize 100 0

#-----------------------------------------------------------------------
#-----------------------------------------------------------------------
DestroyFunc FuncSimpleMaximize
AddToFunc   FuncSimpleMaximize
+ I Maximize $0

#-----------------------------------------------------------------------
#-----------------------------------------------------------------------
DestroyFunc FuncSimpleMaximizeVertically
AddToFunc   FuncSimpleMaximizeVertically
+ I Maximize $0 0 100

#-----------------------------------------------------------------------
#-----------------------------------------------------------------------
DestroyFunc FuncSimpleMaximizeHorizontally
AddToFunc   FuncSimpleMaximizeHorizontally
+ I Maximize $0 100 0

#-----------------------------------------------------------------------
#-----------------------------------------------------------------------
DestroyFunc FuncSimpleMaximizePartially
AddToFunc   FuncSimpleMaximizePartially
+ I Maximize $0 0 95

#-----------------------------------------------------------------------
# Iconify/deiconify all apps with the same resource
#-----------------------------------------------------------------------
DestroyFunc FuncIconifySameResource
AddToFunc   FuncIconifySameResource
#+ I All ($[w.resource]) Iconify $0
+ I All ($[w.resource]) Thumbnail

#-----------------------------------------------------------------------
# Iconify a window
#-----------------------------------------------------------------------
DestroyFunc FuncIconify
AddToFunc   FuncIconify
#+ C Iconify
+ C Thumbnail

#-----------------------------------------------------------------------
# Shade or unshade the window when the Mouse wheel is rolled up or
# down on the Titlebar. Rolling the Wheel up calls the Function with
# argument `True` and rolling it down uses `False`, so rolling the wheel
# down when the window isnt shaded has no effect, which I like :)
#-----------------------------------------------------------------------
DestroyFunc FuncWheelToggleShade
AddToFunc FuncWheelToggleShade
+ D WindowShade $0

#-----------------------------------------------------------------------
# Move active window to next/previous page
#-----------------------------------------------------------------------
DestroyFunc FuncMoveWindowToPage
AddToFunc FuncMoveWindowToPage
+ I MoveToPage $0 $1
+ I GotoPage $0 $1

#-----------------------------------------------------------------------
# GotoPage and set focus to window which is in the foreground
#-----------------------------------------------------------------------
DestroyFunc FuncGotoPage
AddToFunc FuncGotoPage
+ I GotoPage $0 $1
+ I Next (CurrentPage, !Iconic, !Sticky, !Shaded, !Focused, !Overlapped) FuncSelectWindow

#-----------------------------------------------------------------------
# Move window to top layer and next time back to default
#-----------------------------------------------------------------------
DestroyFunc FuncStaysOnTopAndBack
AddToFunc FuncStaysOnTopAndBack
+ I ThisWindow (Layer 2) Pick (CirculateHit) Layer 0 6
+ I TestRc (!Match) Pick (CirculateHit) Layer default
+ I Raise

#-----------------------------------------------------------------------
# Moves all windows of the same resource to another page
#-----------------------------------------------------------------------
DestroyMenu  MenuWindowGroupQuickMove
AddToMenu    MenuWindowGroupQuickMove
+ "&Right	Page%menu/window-move.xpm%" 	Pick All ($[w.resource]) MoveToPage +1p +0p
+ "&Left	Page%menu/window-move.xpm%" 	Pick All ($[w.resource]) MoveToPage -1p +0p
#+ "D&own	Page%menu/window-move.xpm%" 	Pick All ($[w.resource]) MoveToPage +0p +1p
#+ "&Up  	Page%menu/window-move.xpm%" 	Pick All ($[w.resource]) MoveToPage +0p -1p
+ "" 						Nop
+ "Page	1%menu/window-move.xpm%"		Pick All ($[w.resource]) FuncMoveWindowToPage 0 0
+ "Page	2%menu/window-move.xpm%"		Pick All ($[w.resource]) FuncMoveWindowToPage 1 0
+ "Page	3%menu/window-move.xpm%"		Pick All ($[w.resource]) FuncMoveWindowToPage 2 0
+ "Page	4%menu/window-move.xpm%"		Pick All ($[w.resource]) FuncMoveWindowToPage 3 0

#-----------------------------------------------------------------------
# Move a window to left/right/1-4 page
#-----------------------------------------------------------------------
DestroyMenu  MenuWindowMoveTo
AddToMenu    MenuWindowMoveTo
+ "Move to ..." Title
+ "$[gt.&Right	Page]%menu/window-move.xpm%"	AnimatedMove w+100 w
+ "&Left	Page%menu/window-move.xpm%"	AnimatedMove w-100 w
#+ "&Down	Page%menu/window-move.xpm%"	AnimatedMove w w+100
#+ "&Up  	Page%menu/window-move.xpm%"	AnimatedMove w w-100
+ "" 						Nop
+ "Page	1%menu/window-move.xpm%"		FuncMoveWindowToPage 0 0
+ "Page	2%menu/window-move.xpm%"		FuncMoveWindowToPage 1 0
+ "Page	3%menu/window-move.xpm%"		FuncMoveWindowToPage 2 0
+ "Page	4%menu/window-move.xpm%"		FuncMoveWindowToPage 3 0


#=======================================================================
# 8.4 Menus
#=======================================================================

#-----------------------------------------------------------------------
# Show a Wallpaper configuration menu
#-----------------------------------------------------------------------
DestroyFunc FuncMenuWallpaperConfiguration
AddToFunc FuncMenuWallpaperConfiguration
+ I Test (x convert) PipeRead `echo SetEnv appmatch 1`
+ I TestRc (!Match) PipeRead `echo SetEnv appmatch 0`
+ I Test (x Esetroot) PipeRead 'echo SetEnv appmatch `expr $appmatch + 1`'
+ I Test (EnvMatch appmatch 2) Popup MenuWallpaperConfiguration
+ I TestRc (!Match) FuncShowMessage "Wallpaper browser Info" "Install ImageMagick AND eterm for full functionality."

#-----------------------------------------------------------------------
# Creates a dynamic menu for all available Fvwm manpages
#-----------------------------------------------------------------------
DestroyFunc FuncFvwmManpageMenu
AddToFunc FuncFvwmManpageMenu
+ I PipeRead 'fvwm-menu-directory \
              --dir "/usr/share/man/man1" \
              --title "Man Pages" --exec-file "^xterm -fg $[fg.cs33] -bg $[bg.cs33] -g 80x40 -n Fvwm-Help -T Fvwm-Help -e man" |\
              grep "^Destroy\\|^AddTo\\|^+ Dynamic\\|^+ Missing\\|^+ \\"[Ff]vwm*"|sed -e "s#\\.1\\.gz##g" \
              -e "s#/usr/share/man/man1/##g" -e "s#\\"##3" -e "s#\\"##3" '

#-----------------------------------------------------------------------
# Start the correct keyboard layouter app
#-----------------------------------------------------------------------
DestroyFunc FuncKbdLayouter
AddToFunc FuncKbdLayouter
+ I Test (x gxneur) Exec exec gxneur
+ I TestRc (!Match) Test (x xneur) Exec exec xneur
+ I TestRc (!Match) FuncShowMessage "Keyboard Layout Info" "Install xneur/gxneur for full functionality"

#-----------------------------------------------------------------------
# Start Gtk config tool if available
#-----------------------------------------------------------------------
DestroyFunc FuncLxappearance
AddToFunc FuncLxappearance
+ I Test (x lxappearance) Exec exec lxappearance
+ I TestRc (!Match) FuncShowMessage "Gtk+ Decor Info" "Install LxApearance for Gtk+ apps"

#-----------------------------------------------------------------------
# Start Qt3/4 config tool if available
#-----------------------------------------------------------------------
DestroyFunc FuncQt3Decor
AddToFunc FuncQt3Decor
+ I Test (x qtconfig-qt3) Exec exec qtconfig-qt3
+ I TestRc (!Match) FuncShowMessage "Qt3 Decor Info" "Install qtconfig-qt3 for Qt3 apps"

DestroyFunc FuncQt4Decor
AddToFunc FuncQt4Decor
+ I Test (x qtconfig-qt4) Exec exec qtconfig-qt4
+ I TestRc (!Match) FuncShowMessage "Qt4 Decor Info" "Install qtconfig-qt4 for Qt4 apps"



########################################################################
#                            9. M E N U S
########################################################################

#=======================================================================
# 9.1 Root menu
#=======================================================================
# Dynamic menu realized with DynamicPopupAction
AddToMenu MenuRoot DynamicPopupAction FuncMenuRoot

DestroyFunc FuncMenuRoot
AddToFunc   FuncMenuRoot
+ I DestroyMenu MenuRoot
+ I AddToMenu MenuRoot DynamicPopupAction FuncMenuRoot
+ I AddToMenu MenuRoot "$[gt.Root Menu]" Title
+ I AddToMenu MenuRoot "$[gt.&Personal Applications]%menu/home.xpm%"		Popup MenuFvwmPersonal
+ I Popup FvwmMenu
+ I AddToMenu MenuRoot "" Nop
+ I AddToMenu MenuRoot "$[gt.&Configuration]%menu/configuration.xpm%"		Popup MenuConfiguration
+ I AddToMenu MenuRoot "$[gt.&Help]%menu/help.xpm%"				Popup MenuHelp
+ I AddToMenu MenuRoot "" Nop
+ I AddToMenu MenuRoot "$[gt.FVWM &Modules]%menu/modules.xpm%"			Popup MenuFvwmModules
+ I AddToMenu MenuRoot "$[gt.&Window Operations]%menu/window.xpm%"		Popup MenuWindowOpsFull
+ I AddToMenu MenuRoot "" Nop
+ I AddToMenu MenuRoot "$[gt.Lock screen]	Shift-Ctrl+L%menu/lock.xpm%"	FuncLockScreen
+ I AddToMenu MenuRoot "$[gt.&Run Command]	Shift-Alt-F2%menu/system.xpm%"	module FvwmForm FvwmForm-RunCommand
+ I AddToMenu MenuRoot "$[gt.&Terminal]	Shift-Ctrl-T%menu/terminal.xpm%"	exec exec $[infostore.default_terminal]
+ I AddToMenu MenuRoot "$[gt.&Quit FVWM]%menu/quit.xpm%"			Popup MenuFvwmQuit


#-----------------------------------------------------------------------
# Dynamic FvwmMenu sub menu for XDG menus
# realized with DynamicPopupAction
#-----------------------------------------------------------------------
AddToMenu FvwmMenu DynamicPopupAction FuncXdgMenusInRoot

DestroyFunc FuncXdgMenusInRoot
AddToFunc   FuncXdgMenusInRoot
+ I AddToMenu FvwmMenu DynamicPopupAction FuncXdgMenusInRoot
+ I Test (f  $[FVWM_USERDIR]/.menu) Read $[FVWM_USERDIR]/.menu
+ I TestRC (!Match) PipeRead 'fvwm-menu-desktop --insert-in-menu MenuRoot > $[FVWM_USERDIR]/.menu &&  echo "Read $[FVWM_USERDIR]/.menu"'


#-----------------------------------------------------------------------
# Dynamic personal applications sub menu for favorite apps
# realized with DynamicPopupAction
#-----------------------------------------------------------------------
AddToMenu MenuFvwmPersonal DynamicPopupAction FuncMenuFvwmPersonal

DestroyFunc FuncMenuFvwmPersonal
AddToFunc   FuncMenuFvwmPersonal
+ I DestroyMenu MenuFvwmPersonal
+ I AddToMenu MenuFvwmPersonal DynamicPopupAction FuncMenuFvwmPersonal
+ I AddToMenu MenuFvwmPersonal "$[gt.&Personal Applications]" Title
+ I AddToMenu MenuFvwmPersonal "$[gt.Configure Personal Applications]%menu/configuration.xpm%"	FvwmScript FvwmScript-PersonalMenu
+ I Test (f  $[FVWM_USERDIR]/.personal) PipeRead `sed -e '/^# personal menu/ d;/^ *$/,$ d' $[FVWM_USERDIR]/.personal`


#=======================================================================
# 9.2 Help
#=======================================================================
DestroyMenu MenuHelp
AddToMenu   MenuHelp
+ "$[gt.&Help]" Title
# Dynamic Fvwm Manpages realized with MissingSubmenuFunction
+ MissingSubmenuFunction FuncFvwmManpageMenu
+ "%menu/help.xpm%$[gt.FVWM Man Pages]"			Popup "/usr/share/man/man1"
+ "%menu/www.xpm%$[gt.FVWM Web Pages]"			Popup MenuFvwmWebPages
+ "%menu/help.xpm%$[gt.Other Helps]"			Popup MenuHelpOthers
+ "%menu/information.xpm%$[gt.Show FVWM Version]"	FuncShowMessage "Fvwm Version Info" "$[version.line]"
+ "%$[FNS_SYSTEMDIR]/artwork/icons/icon_fns_16x16.png%$[gt.About Nightshade]"        Module FvwmForm FvwmForm-About

#-----------------------------------------------------------------------
# Dynamic other help application sub menu for miscellaneous help tools
# realized with DynamicPopupAction
#-----------------------------------------------------------------------
AddToMenu MenuHelpOthers DynamicPopupAction FuncMenuHelpOthers

DestroyFunc FuncMenuHelpOthers
AddToFunc   FuncMenuHelpOthers
+ I DestroyMenu  MenuHelpOthers
+ I AddToMenu MenuHelpOthers DynamicPopupAction FuncMenuHelpOthers
+ I AddToMenu MenuHelpOthers "$[gt.&Others]" Title
+ I Test (x xman) AddToMenu MenuHelpOthers "%menu/help.xpm%$[gt.X Man Pages]"               Exec exec xman
+ I Test (x gnome-help) AddToMenu MenuHelpOthers "%menu/help.xpm%$[gt.GNOME Help]"          Exec exec gnome-help
+ I Test (x gnome-help-browser) AddToMenu MenuHelpOthers "%menu/help.xpm%$[gt.GNOME Help]"  Exec exec gnome-help-browser
+ I Test (x kdehelp) AddToMenu MenuHelpOthers "%menu/help.xpm%$[gt.KDE Help]"               Exec exec kdehelp
+ I Test (x khelpcenter) AddToMenu MenuHelpOthers "%menu/help.xpm%$[gt.KDE Help]"           Exec exec khelpcenter


#-----------------------------------------------------------------------
# Help submenu Fvwm web pages
#-----------------------------------------------------------------------
DestroyMenu MenuFvwmWebPages
AddToMenu   MenuFvwmWebPages
+ "$[gt.FVWM Web Pages]" Title
+ "%menu/information.xpm%$[gt.Home Page]"         	FuncOpenURL http://www.fvwm.org/
+ "%menu/information.xpm%$[gt.FAQ]"               	FuncOpenURL http://www.fvwm.org/generated/FAQ.html
+ "%menu/information.xpm%$[gt.Documentation]"     	FuncOpenURL http://fvwm.org/doc/unstable/index.html
+ "" 							Nop
+ "%menu/information.xpm%$[gt.Wiki]"              	FuncOpenURL http://fvwmwiki.xteddy.org/
+ "%menu/information.xpm%$[gt.Forum]"             	FuncOpenURL http://www.fvwmforums.org/
+ "" 							Nop
+ "%menu/information.xpm%$[gt.In the beginning was ...]" FuncOpenURL http://edulinux.homeunix.org/fvwm/user_enumerate.html
+ "%menu/information.xpm%$[gt.Beginners Guide]"   	FuncOpenURL http://zensites.net/fvwm/guide/
+ "%menu/information.xpm%$[gt.FAQ inofficial]"    	FuncOpenURL http://edulinux.homeunix.org/fvwm/fvwmchanfaq.html
+ "%menu/information.xpm%$[gt.How Styles are Applied]"	FuncOpenURL http://linuxgazette.net/127/adam.html
+ "%menu/information.xpm%$[gt.Session Management]"    	FuncOpenURL http://linuxgazette.net/100/adam.html


#=======================================================================
# 9.3 Modules
#=======================================================================
DestroyMenu MenuFvwmModules
AddToMenu   MenuFvwmModules
+ "$[gt.FVWM Modules]" Title
+ "$[gt.Start Regular Modules]%menu/modules.xpm%"       Popup MenuStartRegularModules
+ "$[gt.Stop Regular Modules]%menu/quit.xpm%"           Popup MenuStopRegularModules

#-----------------------------------------------------------------------
# Modules sub menu for starting regular Fvwm modules
#-----------------------------------------------------------------------
DestroyMenu MenuStartRegularModules
AddToMenu   MenuStartRegularModules
+ "$[gt.Regular Modules]" Title
+ "$[gt.&Animation]%menu/window-iconify.xpm%"           FuncRestartModule FvwmAnimate
+ "$[gt.Backe&r]%menu/display.xpm%"                     FuncRestartModule FvwmBacker
+ "$[gt.Ba&nner]%menu/display.xpm%"                     Module FvwmBanner
+ "$[gt.Co&mmandS]%menu/terminal-special.xpm%"          FuncRestartModule FvwmCommandS
+ "$[gt.&Console]%menu/terminal-special.xpm%"           FuncFvwmConsole
+ "$[gt.&GtkDebug]%menu/development.xpm%"               Module FvwmGtkDebug
+ "$[gt.&Debug Console]%menu/development.xpm%"          Module FvwmDebug --xconsole
+ "$[gt.&Identify]%menu/window-identify.xpm%"           Module FvwmIdent
+ "$[gt.&ScrollBar (1/2 app)]%menu/window-resize.xpm%"  Module FvwmScroll 2 2
+ "$[gt.&ScrollBar (75%% scr)]%menu/window-resize.xpm%" Module FvwmScroll 75p 75p
+ "$[gt.Auto Raise (1/2 sec)]%menu/window-raise.xpm%" 	FuncRestartModule 'FvwmAuto 500 "Silent Raise" Nop'
+ "$[gt.Auto Raise (2 sec)]%menu/window-raise.xpm%"   	FuncRestartModule 'FvwmAuto 2000 "Silent Raise" Nop'
+ "" Nop
+ "$[gt.&Forms]%menu/utility.xpm%"                      Popup  MenuFvwmForms

#-----------------------------------------------------------------------
# Modules sub menu for stoping regular Fvwm modules
#-----------------------------------------------------------------------
DestroyMenu MenuStopRegularModules
AddToMenu   MenuStopRegularModules
+ "$[gt.Regular Modules]" Title
+ "$[gt.Stop &Animation]%menu/quit.xpm%"          KillModule FvwmAnimate
+ "$[gt.Stop Backe&r]%menu/quit.xpm%"             KillModule FvwmBacker
+ "$[gt.Stop Co&mmandS]%menu/quit.xpm%"           KillModule FvwmCommandS
+ "$[gt.Stop &Console]%menu/quit.xpm%"            KillModule FvwmConsole
+ "$[gt.Stop &GtkDebug]%menu/quit.xpm%"           KillModule FvwmGtkDebug
+ "$[gt.Stop &Identify]%menu/quit.xpm%"           KillModule FvwmIdent
+ "$[gt.Stop &ScrollBar]%menu/quit.xpm%"          KillModule FvwmScroll
+ "$[gt.Stop Auto Rais&e]%menu/quit.xpm%"         KillModule FvwmAuto
+ "$[gt.Stop All Events]%menu/quit.xpm%"          KillModule FvwmEvent
+ "$[gt.Stop All &Buttons]%menu/quit.xpm%"        KillModule FvwmButtons
+ "$[gt.Stop All &Forms]%menu/quit.xpm%"          KillModule FvwmForm

#-----------------------------------------------------------------------
# Modules sub menu for Fvwm Form modules
#-----------------------------------------------------------------------
DestroyMenu MenuFvwmForms
AddToMenu   MenuFvwmForms
+ "$[gt.FvwmForm Tools]" Title
+ "$[gt.&Capture]%menu/display.xpm%"              Module FvwmForm FvwmForm-Capture
+ "$[gt.&Rlogin]%menu/terminal-remote.xpm%"       Module FvwmForm FvwmForm-Rlogin
+ "$[gt.&Talk]%menu/terminal-special.xpm%"        Module FvwmForm FvwmForm-Talk
+ "$[gt.&QuitVerify]%menu/quit.xpm%"              Module FvwmForm FvwmForm-QuitVerify


#=======================================================================
# 9.4 Configuration Menu
#=======================================================================
DestroyMenu MenuConfiguration
AddToMenu   MenuConfiguration
+ "$[gt.&Configuration]" Title
+ "$[gt.&Animation Control]%menu/window-iconify.xpm%"     	Popup MenuFvwmAnimate
+ MissingSubmenuFunction FuncMenuWallpaperConfiguration
+ "$[gt.Configure &Background]%menu/image-viewer.xpm%"    	Popup MenuWallpaperConfiguration
+ "$[gt.&Keyboard]%menu/keyboard.xpm%"     			Popup MenuKeyboard
+ "$[gt.&Mouse]%menu/mouse.xpm%"     				Popup MenuMouse
+ MissingSubmenuFunction FuncMenuXScreenSaver
+ "$[gt.Sc&reen Saver]%menu/display.xpm%"      			Popup MenuXScreenSaver
+ "$[gt.&Decoration]%menu/themes.xpm%"     	    		Popup MenuDecoration
+ "$[gt.Fvwm Form &Defaults]%menu/configuration.xpm%"  		Module FvwmForm FvwmForm-Form
+ "$[gt.Fvwm-&Nightshade Setup]%$[FNS_SYSTEMDIR]/artwork/icons/icon_fns_16x16.png%"  FvwmForm FvwmForm-FNS-BaseSetup
+ "$[gt.&System Bell]%menu/sound.xpm%"                		FvwmScript FvwmScript-BellSetup
+ "$[gt.&Screen]%menu/display.xpm%"            			FvwmScript FvwmScript-ScreenSetup
+ "$[gt.&CPU Performance]%menu/monitoring.xpm%"            			FvwmScript FvwmScript-CPU-Performance
+ "" Nop
+ "$[gt.&Show Colorsets]%menu/colors.xpm%"                   	FuncFvwmShowColorsets
+ "$[gt.&Tail .xsession-errors]%menu/information.xpm%" 		FuncViewFileTail ".xsession-errors" $[HOME]/.xsession-errors


#-----------------------------------------------------------------------
# Sub menu for keyboard configuration
#-----------------------------------------------------------------------
DestroyMenu MenuKeyboard
AddToMenu MenuKeyboard
+ "$[gt.&Keyboard]" Title
+ "$[gt.&Settings]%menu/keyboard.xpm%"		FvwmScript FvwmScript-KeyboardSetup
+ "$[gt.&Layout]%menu/keyboard.xpm%"      	FuncKbdLayouter

#-----------------------------------------------------------------------
# Sub menu for Mouse settings
#-----------------------------------------------------------------------
DestroyMenu MenuMouse
AddToMenu   MenuMouse
+ "$[gt.&Mouse]" Title
+ "$[gt.&Settings]%menu/mouse.xpm%"		FvwmScript FvwmScript-PointerSetup
+ "$[gt.Root &Cursor]%menu/item.xpm%"		Module FvwmForm FvwmForm-RootCursor

#-----------------------------------------------------------------------
# Sub menu for window decoration
#-----------------------------------------------------------------------
DestroyMenu MenuDecoration
AddToMenu   MenuDecoration
+ "$[gt.&Decoration]" Title
+ "$[gt.Fvwm &Decor]%menu/windows.xpm%"		Popup FvwmDecorMenu
+ "$[gt.&Qt Decor]%menu/kde.xpm%"		Popup MenuQtDecor
+ "$[gt.&Gtk+ Decor]%menu/gnome.xpm%"		FuncLxappearance

#-----------------------------------------------------------------------
# Sub menu for Qt styled windows
#-----------------------------------------------------------------------
DestroyMenu MenuQtDecor
AddToMenu   MenuQtDecor
+ "$[gt.&Qt Decor]" Title
+ "$[gt.&Qt-3 Decor]%menu/kde.xpm%"      	FuncQt3Decor
+ "$[gt.&Qt-4 Decor]%menu/kde.xpm%"      	FuncQt4Decor

#-----------------------------------------------------------------------
# Dynamic decor sub menu with names of each decor folder
# with DynamicPopupAction and recreation
#-----------------------------------------------------------------------
DestroyMenu FvwmDecorMenu
AddToMenu FvwmDecorMenu
+ "$[gt.Decors]" Title
+ DynamicPopupAction Function FuncFvwmDecorMenu

DestroyFunc FuncFvwmDecorMenu
AddToFunc FuncFvwmDecorMenu
+ I DestroyMenu recreate FvwmDecorMenu
+ I AddToMenu FvwmDecorMenu "$[gt.Decors]" Title
+ I PipeRead 'for i in `ls -Fh $FNS_SYSTEMDIR/themes/ | grep /$ | sed s#/##g`; \
  do echo AddToMenu FvwmDecorMenu "${i}%menu/amusement.xpm%" FuncChangeDecor $i; done'
+ I PipeRead 'for i in `ls -Fh $FVWM_USERDIR/themes/ | grep /$ | sed s#/##g`; \
  do echo AddToMenu FvwmDecorMenu "${i}%menu/amusement.xpm%" FuncChangeDecor $i; done'

#-----------------------------------------------------------------------
# Dynamic Configuration sub menu for setting a background with
# a picture or FvwmBaker (default background) 
# realized with MissingSubmenuFunction (for the pictures)
#-----------------------------------------------------------------------
AddToMenu MenuWallpaperConfiguration DynamicPopupAction FuncMenuWallpaperConfiguration

DestroyFunc FuncMenuWallpaperConfiguration
AddToFunc   FuncMenuWallpaperConfiguration
+ I DestroyMenu MenuWallpaperConfiguration
+ I AddToMenu MenuWallpaperConfiguration "$[gt.&Background Configuration]" Title
+ I AddToMenu MenuWallpaperConfiguration DynamicPopupAction FuncMenuWallpaperConfiguration
+ I Test (I $[infostore.fvwm_wallpaper]) \
    AddToMenu MenuWallpaperConfiguration "$[gt.Set &Default background]%menu/choice-no.xpm%"      FuncDelWallpaperlink
+ I AddToMenu MenuWallpaperConfiguration MissingSubmenuFunction WallpaperBrowser
+ I AddToMenu MenuWallpaperConfiguration "$[gt.Set &Wallpaper background]%menu/image-viewer.xpm%"    Popup $[infostore.wallpaper_dir]

#-----------------------------------------------------------------------
# Screensaver sub menu for X configuration
#-----------------------------------------------------------------------
DestroyMenu MenuXScreenSaver
AddToMenu   MenuXScreenSaver
+ "$[gt.Screen Saver]" Title
+ "$[gt.XscreenSaver &Settings]%menu/display.xpm%"  Exec xscreensaver-command -exit; exec xscreensaver; exec xscreensaver-command -demo
+ "$[gt.&XscreenSaver (Re)start]%menu/display.xpm%" Exec xscreensaver-command -exit; exec xscreensaver -no-splash
+ "$[gt.XscreenSaver &Stop]%menu/choice-no.xpm%"    Exec exec xscreensaver-command -exit
+ "$[gt.XscreenSaver &Lock]%menu/lock.xpm%"         Exec exec q -lock
+ "$[gt.XscreenSaver &Activate]%menu/display.xpm%"  Exec exec xscreensaver-command -activate


#=======================================================================
# 9.5 Fvwm Quit menu
#=======================================================================
DestroyMenu MenuFvwmQuit
AddToMenu MenuFvwmQuit "$[gt.Really Quit FVWM]?" 	Title
#+ "$[gt.&Restart]%menu/restart.xpm%"             	Restart
+ "$[gt.&Restart]%menu/restart.xpm%"             	FuncRestart
+ "" 						 	Nop
+ "$[gt.Re&fresh Screen]%menu/refresh.xpm%"      	Refresh
+ "$[gt.Re&capture Screen]%menu/refresh.xpm%"    	Recapture
+ "" 						 	Nop
+ "$[gt.&Suspend System]%menu/system.xpm%"       	FuncSuspend
+ "$[gt.&Hibernate System]%menu/system.xpm%"     	FuncHibernate
+ "" 						 	Nop
+ "$[gt.&Yes, Really Quit]%menu/choice-yes.xpm%" 	Quit
+ "$[gt.&No, Don't Quit]%menu/choice-no.xpm%"    	Nop


#=======================================================================
# 9.6 Window Ops menus
#=======================================================================
# This defines all window operations
DestroyMenu MenuWindowOpsFull
AddToMenu   MenuWindowOpsFull
+ "$[gt.Window Operations]" Title
+ "$[gt.&Move]	Shift-Alt-F7%menu/window-move.xpm%"                 Move
+ "$[gt.&Resize]	Shift-Alt+F8%menu/window-resize.xpm%"             Resize
+ "$[gt.(De)&Iconify]	Shift-Alt+F9%menu/window-iconify.xpm%"        Iconify
+ "$[gt.(Un)Ma&ximize]	Shift-Alt+F10%menu/window-maximize.xpm%"    Maximize
+ "$[gt.(Un)&Shade]%menu/window-shade.xpm%"             WindowShade
+ "$[gt.(Un)S&tick]%menu/window-stick.xpm%"             Stick "toggle"
+ "$[gt.R&aise]%menu/window-raise.xpm%"                 Raise
+ "$[gt.&Lower]%menu/window-lower.xpm%"                 Lower
+ "" Nop
+ "$[gt.&Delete]%menu/window-delete.xpm%"               Delete
+ "$[gt.&Close]	Shift-Alt+F4%menu/window-close.xpm%"    Close
+ "$[gt.&Destroy]%menu/window-destroy.xpm%"             Destroy
+ "" Nop
+ "$[gt.Move to &Page]%menu/window-move.xpm%"           Popup MenuWindowMoveTo
+ "$[gt.&Group Operations]%menu/windows.xpm%"           Popup MenuWindowGroupOps
+ "$[gt.&Window Style]%menu/window.xpm%"                Popup MenuWindowStyle
+ "$[gt.&Maximize Window]%menu/window-maximize.xpm%"    Popup MenuWindowMaximize
+ "$[gt.&Refresh Window]%menu/refresh.xpm%"             Popup MenuWindowRefresh
+ "$[gt.R&earrange All]%menu/refresh.xpm%"              Popup MenuRearrangeWindows
+ "$[gt.Window &Utility]%menu/utility.xpm%"             Popup MenuWindowUtility
+ "" Nop
+ "$[gt.&Identify]	Shift-Alt+F12%menu/window-identify.xpm%"	Module FvwmIdent
+ "$[gt.Sw&itch to...(WinList)]	Shift-Alt+F3%menu/windows.xpm%"       	WindowList

#-----------------------------------------------------------------------
# A trimmed down version of MenuWindowOps, good for decoration bindings
#-----------------------------------------------------------------------
AddToMenu MenuWindowOpsTrimmed DynamicPopupAction FuncMenuWindowOpsTrimmed

DestroyFunc FuncMenuWindowOpsTrimmed
AddToFunc   FuncMenuWindowOpsTrimmed
+ I DestroyMenu MenuWindowOpsTrimmed
+ I AddToMenu MenuWindowOpsTrimmed DynamicPopupAction FuncMenuWindowOpsTrimmed
+ I AddToMenu MenuWindowOpsTrimmed "$[gt.Re&store]	Shift-Alt+F10%menu/window.xpm%"         FuncRestore
+ I AddToMenu MenuWindowOpsTrimmed "$[gt.&Move]	Shift-Alt+F7%menu/window-move.xpm%"         	Move
+ I AddToMenu MenuWindowOpsTrimmed "$[gt.&Resize]	Shift-Alt+F8%menu/window-resize.xpm%"   Resize
+ I AddToMenu MenuWindowOpsTrimmed "$[gt.&Iconify]	%menu/window-iconify.xpm%"    Iconify
+ I AddToMenu MenuWindowOpsTrimmed "$[gt.Ma&ximize]	Shift-Alt+F10%menu/window-maximize.xpm%" Maximize
+ I ThisWindow (Layer 2) \
    AddToMenu MenuWindowOpsTrimmed "$[gt.Stays On &Top]%menu/window-raise.xpm%"             FuncStaysOnTopAndBack
+ I TestRc (!Match) \
    AddToMenu MenuWindowOpsTrimmed "$[gt.Stays &Back]%menu/window-lower.xpm%"               FuncStaysOnTopAndBack
+ I AddToMenu MenuWindowOpsTrimmed "$[gt.(Un)&Stick]%menu/window-stick.xpm%"                Stick "toggle"
+ I AddToMenu MenuWindowOpsTrimmed "" Nop
+ I AddToMenu MenuWindowOpsTrimmed "$[gt.&Close]	Shift-Alt+F4%menu/window-close.xpm%"      Close
+ I AddToMenu MenuWindowOpsTrimmed "" Nop
+ I AddToMenu MenuWindowOpsTrimmed "$[gt.&Identify]	Shift-Alt+F12%menu/window-identify.xpm%"  Module FvwmIdent
+ I AddToMenu MenuWindowOpsTrimmed "$[gt.Mor&e...]	%menu/window.xpm%"            	Menu MenuWindowOpsFull This 0 0

#-----------------------------------------------------------------------
# Resource window group operations for the root menu and buttons
#-----------------------------------------------------------------------
DestroyMenu  MenuWindowGroupOps
AddToMenu    MenuWindowGroupOps
+ "$[gt.&Resource Group Ops]" Title
+ "&$[gt.Iconify]%menu/window-iconify.xpm%"             Pick All ($[w.resource]) Iconify on
+ "$[gt.De&Iconify]%menu/window-iconify.xpm%"           Pick All ($[w.resource]) Iconify off
+ "$[gt.&Shade]%menu/window-shade.xpm%"                 Pick All ($[w.resource]) WindowShade on
+ "$[gt.Un&Shade]%menu/window-shade.xpm%"               Pick All ($[w.resource]) WindowShade off
+ "$[gt.R&aise]%menu/window-raise.xpm%"                 Pick All ($[w.resource]) Raise
+ "$[gt.Lo&wer]%menu/window-lower.xpm%"                 Pick All ($[w.resource]) Lower
+ "" Nop
+ "$[gt.&Delete]%menu/window-delete.xpm%"               Pick All ($[w.resource]) Delete
+ "$[gt.&Close]%menu/window-close.xpm%"                 Pick All ($[w.resource]) Close
+ "$[gt.&Destroy]%menu/window-destroy.xpm%"             Pick All ($[w.resource]) Destroy
+ "" Nop
+ "$[gt.&Quick Move To ...]%menu/window-move.xpm%"      Popup MenuWindowGroupQuickMove

#-----------------------------------------------------------------------
# Windows Ops sub menu for window styling
#-----------------------------------------------------------------------
DestroyMenu MenuWindowStyle
AddToMenu   MenuWindowStyle
+ "$[gt.Window Style]" Title
+ "%menu/window.xpm%TitleAt&Top"             WindowStyle TitleAtTop
+ "%menu/window.xpm%TitleAt&Bottom"          WindowStyle TitleAtBottom
+ "%menu/window.xpm%&Title"                  WindowStyle Title
+ "%menu/window.xpm%&NoTitle"                WindowStyle !Title
+ "" Nop
+ "%menu/window.xpm%&FvwmBorder"             WindowStyle FvwmBorder
+ "%menu/window.xpm%&MWMBorder"              WindowStyle MWMBorder
+ "%menu/window.xpm%&DepressableBorder"      WindowStyle DepressableBorder
+ "%menu/window.xpm%&FirmBorder"             WindowStyle FirmBorder
+ "%menu/window.xpm%&Handles"                WindowStyle Handles
+ "%menu/window.xpm%N&oHandles"              WindowStyle !Handles
+ "%menu/window.xpm%&BorderWidth 0"          WindowStyle BorderWidth 0
+ "%menu/window.xpm%BorderWidth &5"          WindowStyle BorderWidth 5
+ "%menu/window.xpm%Handle&Width 0"          WindowStyle HandleWidth 0
+ "%menu/window.xpm%HandleWidth &7"          WindowStyle HandleWidth 7
+ "" Nop
+ "%menu/window-resize.xpm%Re&sizeOpaque"    WindowStyle ResizeOpaque
+ "%menu/window-resize.xpm%Resize&Outline"   WindowStyle ResizeOutline
+ "%menu/mouse.xpm%S&loppyFocus"             WindowStyle SloppyFocus
+ "%menu/mouse.xpm%&ClickToFocus"            WindowStyle ClickToFocus
+ "%menu/mouse.xpm%M&ouseFocus"              WindowStyle MouseFocus
+ "%menu/mouse.xpm%N&everFocus"              WindowStyle NeverFocus

#-----------------------------------------------------------------------
# Windows Ops sub menu for maximize windows
#-----------------------------------------------------------------------
DestroyMenu MenuWindowMaximize
AddToMenu   MenuWindowMaximize
+ "$[gt.Maximize Window]" Title
+ "%menu/window-maximize.xpm%$[gt.&Maximize Fully]"    Maximize On 100 100
+ "%menu/window-maximize.xpm%$[gt.&Unmaximize]"      Maximize Off
+ "" Nop
+ "%menu/window-maximize.xpm%$[gt.Maximize &Partially]"        Pick FuncSimpleMaximizePartially On
+ "%menu/window-maximize.xpm%$[gt.Maximize &Vertically]"       Pick FuncSimpleMaximizeVertically On
+ "%menu/window-maximize.xpm%$[gt.Maximize &Horizontally]"     Pick FuncSimpleMaximizeHorizontally On
+ "" Nop
# these bound functions do not seem to work well if used consequentially
+ "%menu/window-maximize.xpm%$[gt.Maximize &Grow]"             Maximize On grow grow
+ "%menu/window-maximize.xpm%$[gt.Maximize Grow V&ert.]"       Maximize On    0 grow
+ "%menu/window-maximize.xpm%$[gt.Maximize Grow H&oriz.]"      Maximize On grow    0
+ "" Nop
+ "%menu/window-maximize.xpm""%$[gt.Maximize &Full Screen]	Shift-Alt+F11" Pick FuncMaximizeFullScreen
+ "%menu/window-maximize.xpm%$[gt.&Unmaximize Full Screen]	Shift-Alt+F11" Pick FuncMaximizeFullScreen

#-----------------------------------------------------------------------
# Windows Ops sub menu for window refreshing
#-----------------------------------------------------------------------
DestroyMenu MenuWindowRefresh
AddToMenu   MenuWindowRefresh
+ "$[gt.Refresh Window]" Title
+ "%menu/refresh.xpm%$[gt.Re&fresh Window]"        RefreshWindow
+ "%menu/refresh.xpm%$[gt.Re&capture Window]"      RecaptureWindow
+ "%menu/refresh.xpm%$[gt.&Place Again]"           PlaceAgain anim
+ "" Nop
+ "%menu/window.xpm%$[gt.&Restore]"                FuncRestore

#-----------------------------------------------------------------------
# Windows Ops sub menu for window rearranging
#-----------------------------------------------------------------------
DestroyMenu MenuRearrangeWindows
AddToMenu   MenuRearrangeWindows
+ "$[gt.Rearrange Windows]" Title
+ "%menu/refresh.xpm%$[gt.&Cascade]"              FvwmRearrange -cascade -m 3 3 -incx 2
+ "%menu/refresh.xpm%$[gt.&Place Again]"          All (CurrentPage !Sticky) PlaceAgain anim
+ "" NopFvwmAnimate
+ "%menu/refresh.xpm%$[gt.Tile &horizontally]"    FvwmRearrange -tile -h -m 2 2 98 98
+ "%menu/refresh.xpm%$[gt.Tile &vertically]"      FvwmRearrange -tile    -m 2 2 98 98
+ "" Nop
+ "%menu/refresh.xpm%$[gt.&Arrange Icons]"        All (CurrentDesk Iconic) RecaptureWindow

#-----------------------------------------------------------------------
# Windows Ops sub menu for window utilities like screenshot, layer, etc
#-----------------------------------------------------------------------
DestroyMenu MenuWindowUtility
AddToMenu   MenuWindowUtility
+ "$[gt.Window Utility]" Title
+ "%menu/window.xpm%$[gt.Create &Screenshot]	Shift-Ctrl+Print"	Pick (CirculateHit) FuncWindowCreateScreenshot
+ "%menu/display.xpm%$[gt.&Desktop Screenshot]	Alt+Print"           	FuncDesktopCreateScreenshot 5
+ "" Nop
+ "%menu/window-raise.xpm%$[gt.Stays On &Top]"			Pick (CirculateHit) Layer 0 6
+ "%menu/window-raise.xpm%$[gt.Layer &+1]"                 	Pick (CirculateHit) Layer +1
+ "%menu/window.xpm%$[gt.Stays &Put]"                      	Pick (CirculateHit) Layer 0 4
+ "%menu/window-lower.xpm%$[gt.Layer &-1]"                 	Pick (CirculateHit) Layer -1
+ "%menu/window-lower.xpm%$[gt.Stays On &Bottom]"          	Pick (CirculateHit) Layer 0 2
+ "" Nop
+ "%menu/window-resize.xpm%$[gt.Scroll&Bar (1/2 app)]"    	Pick Module FvwmScroll 2 2
+ "%menu/window-resize.xpm%$[gt.ScrollBar (&75%% scr)]"   	Pick Module FvwmScroll 75p 75p

#-----------------------------------------------------------------------
# Desktop Ops menus
#-----------------------------------------------------------------------
DestroyMenu MenuDesktopOps
AddToMenu   MenuDesktopOps
+ "$[gt.&Desktopmenu]" Title
+ MissingSubmenuFunction FuncMenuWallpaperConfiguration
+ "$[gt.Configure &Background]%menu/image-viewer.xpm%"    	Popup MenuWallpaperConfiguration
+ "Help%menu/help.xpm%"	 				    	Popup MenuHelp
+ "" Nop
+ "$[gt.Window Operations]"     				Popup MenuWindowOpsFull

