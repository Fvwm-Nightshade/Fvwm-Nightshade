#-----------------------------------------------------------------------
# File:         Horizontal
# Version:      1.0.16
# Licence:      GPL 2
#
# Description:  Layout of object positions on desktop
#
# Author:       Thomas Funk <t.funk@web.de>    
#               Bernhard Popp <kermit.popp@googlemail.com>
#
# Created:      08/16/2012
# Changed:      09/02/2014
#-----------------------------------------------------------------------
#               Top
#
# +--------+        +--------+        +--------+
# |        |        |        |        |        |
# +--------+        +--------+        +--------+
# IconManager           Pager           Panel
#
#-----------------------------------------------------------------------

########################################################################
#                        Positioning
########################################################################

#=======================================================================
# Pager
#=======================================================================

#-----------------------------------------------------------------------
# Set the desk top size in units of physical screen size
#
#   +-----+-----+-----+-----+
#   |     |     |     |     |
#   +-----+-----+-----+-----+
#
#-----------------------------------------------------------------------
DeskTopSize 4x1

#-----------------------------------------------------------------------
# actual pager height. Needed for the "top bar" modules also
#-----------------------------------------------------------------------
#PipeRead "echo InfoStoreAdd pager_height $(($[infostore.fontsize]*3))"
PipeRead "echo InfoStoreAdd pager_height `perl -e 'printf \"%.0f\",($[infostore.fontsize]*3.5)'`"

#-----------------------------------------------------------------------
# actual pager width
#-----------------------------------------------------------------------
PipeRead "echo InfoStoreAdd pager_width `perl -e 'printf \"%.0f\",($[infostore.pager_height]*($[vp.width]/$[vp.height])*4)+4'`"

#-----------------------------------------------------------------------
# FvwmPager geometry
#-----------------------------------------------------------------------
PipeRead 'echo InfoStoreAdd pager_geometry $[infostore.pager_width]x$[infostore.pager_height]+$(($[vp.width]/2-$[infostore.pager_width]/2))+0'


#=======================================================================
# FvwmButtons Panel
#=======================================================================

#-----------------------------------------------------------------------
# Panel width
#-----------------------------------------------------------------------
# the width composed of:
#        +---+-----------------------+-------+-------+
#        |   |                       |       |       |
#        +---+-----------------------+-------+-------+
#        menu stalonetray             cpumon  clock
#
# column_size should be 15 pixel long:
# menu: 1 icon with 24 pixel -> 2x15 = 30 pixel
# stalonetray: 6 icon with 24 pixel -> 12x15 = 180 pixel
# cpumon: 5x15 pixel = 75 pixel
# clock: 5x15 pixel = 75 pixel
# total: 360 pixel

# first the count of icons visible in stalonetray must set related to the
# screen resolution
PipeRead    'if [ "$[vp.width]" -gt "1600" ]; then \
                echo InfoStoreAdd tray_icons 7; \
            elif [ "$[vp.width]" -gt "1400" ]; then \
                echo InfoStoreAdd tray_icons 6; \
            elif [ "$[vp.width]" -gt "1200" ]; then \
                echo InfoStoreAdd tray_icons 5; \
            else \
                echo InfoStoreAdd tray_icons 4; \
            fi'

# needed tray columns
PipeRead 'echo InfoStoreAdd tray_columns $(($[infostore.tray_icons]*2))'

# needed columns
PipeRead 'echo InfoStoreAdd columns $(($[infostore.tray_columns]+12))'

# panel width
PipeRead 'echo InfoStoreAdd panel_width $(($[infostore.columns]*15))'


#-----------------------------------------------------------------------
# Panel geometry
#-----------------------------------------------------------------------
PipeRead 'echo InfoStoreAdd panel_geometry $[infostore.panel_width]x$[infostore.pager_height]-0+0''


#=======================================================================
# Icon Manager (WinList per Page)
#=======================================================================

#-----------------------------------------------------------------------
# GlobalIconMan geometry
#-----------------------------------------------------------------------
InfoStoreAdd iconman_button_geometry $[infostore.panel_width]x0

#-----------------------------------------------------------------------
# GlobalIconMan Manager Geometry
#-----------------------------------------------------------------------
PipeRead "echo InfoStoreAdd yStartIman `perl -e 'printf \"%.0f\",$[vp.height]-($[infostore.fontsize]+9)'`"
InfoStoreAdd xStartIman 0
InfoStoreAdd iconman_manager_geometry 1x0+$[infostore.xStartIman]-$[infostore.yStartIman]

#-----------------------------------------------------------------------
# GlobalIconMan Manager Titlebar position
#-----------------------------------------------------------------------
Style GlobalIconManShowHide TitleAtRight

#-----------------------------------------------------------------------
# GlobalIconMan Manager Tips
#-----------------------------------------------------------------------
InfoStoreAdd tips_iman false


#=======================================================================
# Others
#=======================================================================

#-----------------------------------------------------------------------
# Define bands at the edge of the screen. It is used to compute the
# Working Area: EwmhBaseStruts left right top bottom 
#-----------------------------------------------------------------------
Schedule 2000 PipeRead 'echo EwmhBaseStruts 0 0 $(($[infostore.pager_height]+4)) 0'

#-----------------------------------------------------------------------
# IconBox defines the area where FVWM will place any windows that are
# in the iconic state: 
#   IconBox left top right bottom
#
# IconGrid ist the distance between each icon. Default grid is 3x3 pixels:
#   IconGrid x y
#
# IconFill defines the direction icons will place. Default is from left
# to right. To fill an icon box in columns instead of rows, specify the
# vertical direction (top or bottom) first.
#-----------------------------------------------------------------------
Style * IconBox 20 80 -100 -20, \
        IconGrid 40 40, \
        IconFill left bottom, \
        StaysOnBottom


#=======================================================================
# Load layout elements
#=======================================================================
Load modules/GlobalIconMan_ShowHide
Load modules/Pager
Load modules/HorizontalPanel


#=======================================================================
# Functions
#=======================================================================

AddToFunc StartFunction
# start event handler for GlobalIconMan_ShowHide
+ I Module FvwmEvent FvwmEventShowHide
#-----------------------------------------------------------------------
# start window list module
+ I Module FvwmIconMan GlobalIconManShowHide
#-----------------------------------------------------------------------
# start Pager
+ I Module FvwmPager
#-----------------------------------------------------------------------
# start horizontal panel
+ I Module FvwmButtons HorizontalPanel
#-----------------------------------------------------------------------
# start systray applets
+ I Wait stalonetray
+ I FuncStartSystrayApplets


DestroyFunc ReloadLayoutParts
AddToFunc   ReloadLayoutParts
+ I FuncPrintDbgMsg ReloadLayoutParts
+ I PipeRead 'fns-built-trayapplist $FVWM_USERDIR/.systray.log $FVWM_USERDIR/.trayapplist'
+ I Load modules/HorizontalPanel
+ I Load modules/GlobalIconMan_ShowHide
+ I FuncRestartModuleByAlias FvwmButtons HorizontalPanel
+ I Wait stalonetray
+ I Exec exec fns-start-programs reload_applets $[FVWM_USERDIR]/.trayapplist


#=======================================================================
# Bindings
#=======================================================================

#   Keyname    Context  Modifi      Function

#-----------------------------------------------------------------------
# press SHIFT-ALT arrow anywhere, move active
# window to next/previous page
#-----------------------------------------------------------------------
Key Left        A       SM          FuncMoveWindowToPage -1p +0p
Key Right       A       SM          FuncMoveWindowToPage +1p +0p

#-----------------------------------------------------------------------
# key 1-4 move current window to page n
#-----------------------------------------------------------------------
Key 1           A       SM          Current FuncMoveWindowToPage 0 0
Key 2           A       SM          Current FuncMoveWindowToPage 1 0
Key 3           A       SM          Current FuncMoveWindowToPage 2 0
Key 4           A       SM          Current FuncMoveWindowToPage 3 0

#-----------------------------------------------------------------------
# Go to page n with SHIFT-CTRL + number
#-----------------------------------------------------------------------
Key 1           A       SC          FuncGotoPage 0 0
Key 2           A       SC          FuncGotoPage 1 0
Key 3           A       SC          FuncGotoPage 2 0
Key 4           A       SC          FuncGotoPage 3 0

#-----------------------------------------------------------------------
# press SHIFT-CTRL arrow anywhere, and scroll by one page
#-----------------------------------------------------------------------
Key Left        A       SC          FuncGotoPage -1p +0p
Key Right       A       SC          FuncGotoPage +1p +0p

#-----------------------------------------------------------------------
# Help info with SHIFT-CTRL-ALT P to show all page related key bindings
#-----------------------------------------------------------------------
key P           A       SCM         FuncShowMessage  "Page Key Bindings" \
"SHIFT-CTRL:" \
"Cursor right/left: Switch to page right/left" \
"1-4: Switch to page n" \
"SHIFT-ALT:" \
"Cursor right/left: Switch active window to page right/left" \
"1-4: Switch active window to page n" \
"ALT-CTRL:" \
"Cursor right/left/up/down: Move mouse pointer by 1% of a page" \
"SHIFT-ALT-CTRL:" \
"Cursor right/left/up/down: Scroll right/left by 10% of a page"



#=======================================================================
# Menus
#=======================================================================

#-----------------------------------------------------------------------
# Moves all windows of the same resource to another page
#-----------------------------------------------------------------------
AddToMenu MenuWindowGroupQuickMove DynamicPopupAction FuncMenuWindowGroupQuickMove

DestroyFunc FuncMenuWindowGroupQuickMove
AddToFunc   FuncMenuWindowGroupQuickMove
+ I SetMenuIconSize
+ I DestroyMenu MenuWindowGroupQuickMove
+ I AddToMenu MenuWindowGroupQuickMove DynamicPopupAction FuncMenuWindowGroupQuickMove
+ I AddToMenu MenuWindowGroupQuickMove "$[gt.&Right	Page]%window-move.svg:$[infostore.MenuIconSize]%"       Pick All ($[w.resource]) MoveToPage +1p +0p
+ I AddToMenu MenuWindowGroupQuickMove "$[gt.&Left	Page]%window-move.svg:$[infostore.MenuIconSize]%"       Pick All ($[w.resource]) MoveToPage -1p +0p
+ I AddToMenu MenuWindowGroupQuickMove "" Nop
+ I AddToMenu MenuWindowGroupQuickMove "$[gt.&1.	Page]%window-move.svg:$[infostore.MenuIconSize]%"       Pick All ($[w.resource]) FuncMoveWindowToPage 0 0
+ I AddToMenu MenuWindowGroupQuickMove "$[gt.&2.	Page]%window-move.svg:$[infostore.MenuIconSize]%"       Pick All ($[w.resource]) FuncMoveWindowToPage 1 0
+ I AddToMenu MenuWindowGroupQuickMove "$[gt.&3.	Page]%window-move.svg:$[infostore.MenuIconSize]%"       Pick All ($[w.resource]) FuncMoveWindowToPage 2 0
+ I AddToMenu MenuWindowGroupQuickMove "$[gt.&4.	Page]%window-move.svg:$[infostore.MenuIconSize]%"       Pick All ($[w.resource]) FuncMoveWindowToPage 3 0

#-----------------------------------------------------------------------
# Move a window to left/right/1-4 page
#-----------------------------------------------------------------------
AddToMenu MenuWindowMoveTo DynamicPopupAction FuncMenuWindowMoveTo

DestroyFunc FuncMenuWindowMoveTo
AddToFunc   FuncMenuWindowMoveTo
+ I SetMenuIconSize
+ I DestroyMenu MenuWindowMoveTo
+ I AddToMenu MenuWindowMoveTo DynamicPopupAction FuncMenuWindowMoveTo
+ I AddToMenu MenuWindowMoveTo "$[gt.Move to ...]" Title
+ I AddToMenu MenuWindowMoveTo "$[gt.&Right	Page]%window-move.svg:$[infostore.MenuIconSize]%"        AnimatedMove w+100 w
+ I AddToMenu MenuWindowMoveTo "$[gt.&Left	Page]%window-move.svg:$[infostore.MenuIconSize]%"        AnimatedMove w-100 w
+ I AddToMenu MenuWindowMoveTo "" Nop
+ I AddToMenu MenuWindowMoveTo "$[gt.&1.	Page]%window-move.svg:$[infostore.MenuIconSize]%"        FuncMoveWindowToPage 0 0
+ I AddToMenu MenuWindowMoveTo "$[gt.&2.	Page]%window-move.svg:$[infostore.MenuIconSize]%"        FuncMoveWindowToPage 1 0
+ I AddToMenu MenuWindowMoveTo "$[gt.&3.	Page]%window-move.svg:$[infostore.MenuIconSize]%"        FuncMoveWindowToPage 2 0
+ I AddToMenu MenuWindowMoveTo "$[gt.&4.	Page]%window-move.svg:$[infostore.MenuIconSize]%"        FuncMoveWindowToPage 3 0
